openapi: 3.0.3
info:
    title: 'E-sports App API Documentation'
    description: 'E-sports App API Documentation'
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /api/login:
        post:
            summary: 'Handle a login request to the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: callie.crooks@example.net
                                password:
                                    type: string
                                    description: ''
                                    example: velit
                            required:
                                - email
                                - password
            security: []
    /api/logout:
        post:
            summary: 'Log the user out of the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/register:
        post:
            summary: 'Handle a registration request for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: est
                                last_name:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: nigel.gorczany@example.org
                                password:
                                    type: string
                                    description: ''
                                    example: qui
                                password_confirmation:
                                    type: string
                                    description: ''
                                    example: vitae
                            required:
                                - first_name
                                - last_name
                                - email
                                - password
                                - password_confirmation
            security: []
    /api/password/email:
        post:
            summary: 'Send a reset link to the given user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    '/api/password/reset/{token}':
        get:
            summary: 'Display the password reset view for the given token.'
            description: 'If no token is present, display the link request form.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>E-sports</title>\n\n    <!-- Tell the browser to be responsive to screen width -->\n    <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\n\n    <!-- Bootstrap 3.3.7 -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n    <!-- Font Awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n    <!-- Ionicons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css\">\n\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/AdminLTE.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/skins/_all-skins.min.css\">\n\n    <!-- iCheck -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/skins/square/_all.css\">\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n    <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n</head>\n<body class=\"hold-transition login-page\">\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <a href=\"http://localhost/home\"><b>InfyOm </b>Generator</a>\n    </div>\n\n    <!-- /.login-logo -->\n    <div class=\"login-box-body\">\n        <p class=\"login-box-msg\">Reset your password</p>\n\n        <form method=\"post\" action=\"http://localhost/password/reset\">\n            <input type=\"hidden\" name=\"_token\" value=\"R3IV92hVsSAw3UHHF5lEegqTOuiUAsv48iVqItge\">\n            <input type=\"hidden\" name=\"token\" value=\"pariatur\">\n\n            <div class=\"form-group has-feedback \">\n                <input type=\"email\" class=\"form-control\" name=\"email\" value=\"\" placeholder=\"Email\">\n                <span class=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\n                            </div>\n\n            <div class=\"form-group has-feedback\">\n                <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n\n                            </div>\n\n            <div class=\"form-group has-feedback\">\n                <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" placeholder=\"Confirm password\">\n                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n\n                            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <button type=\"submit\" class=\"btn btn-primary pull-right\">\n                        <i class=\"fa fa-btn fa-refresh\"></i>Reset Password\n                    </button>\n                </div>\n            </div>\n        </form>\n\n    </div>\n</div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<!-- AdminLTE App -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/js/adminlte.min.js\"></script>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/icheck.min.js\"></script>\n<script>\n    $(function () {\n        $('input').iCheck({\n            checkboxClass: 'icheckbox_square-blue',\n            radioClass: 'iradio_square-blue',\n            increaseArea: '20%' // optional\n        });\n    });\n</script>\n</body>\n</html>\n"
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: token
                description: ''
                example: pariatur
                required: true
                schema:
                    type: string
    /api/password/reset:
        post:
            summary: 'Reset the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/password/confirm:
        post:
            summary: 'Confirm the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    '/api/email/verify/{id}/{hash}':
        get:
            summary: 'Mark the authenticated user''s email address as verified.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: suscipit
                required: true
                schema:
                    type: string
            -
                in: path
                name: hash
                description: ''
                example: saepe
                required: true
                schema:
                    type: string
    /api/email/resend:
        post:
            summary: 'Resend the email verification notification.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/club_assesments:
        get:
            summary: 'Display a listing of the ClubAssesment.'
            description: 'GET|HEAD /clubAssesments'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Club Assesment'
            security: []
        post:
            summary: 'Store a newly created ClubAssesment in storage.'
            description: 'POST /clubAssesments'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Club Assesment'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 13
                                enjoy_practice_routines:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_participated_in_competitions:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_selected_to_represent:
                                    type: boolean
                                    description: ''
                                    example: false
                                competitions:
                                    type: string
                                    description: ''
                                    example: quas
                                motivation:
                                    type: string
                                    description: ''
                                    example: in
                                achievement:
                                    type: string
                                    description: ''
                                    example: autem
                                admired_sportsperson:
                                    type: string
                                    description: ''
                                    example: aliquid
                                top_athlete_plans:
                                    type: string
                                    description: ''
                                    example: ut
                                current_team:
                                    type: string
                                    description: ''
                                    example: dolores
                                date_joined_team:
                                    type: string
                                    description: ''
                                    example: {  }
                                favourite_jersey_number:
                                    type: string
                                    description: ''
                                    example: itaque
                                nickname:
                                    type: string
                                    description: ''
                                    example: quam
                                favourite_sports_team:
                                    type: string
                                    description: ''
                                    example: impedit
                                why_like_team:
                                    type: string
                                    description: ''
                                    example: vitae
                                no_of_teams_played_for:
                                    type: integer
                                    description: ''
                                    example: 9
                                why_leave:
                                    type: string
                                    description: ''
                                    example: aliquid
                                can_improve_in_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_like_coach_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                positions_play:
                                    type: string
                                    description: ''
                                    example: maiores
                                preferred_foot:
                                    type: string
                                    description: ''
                                    example: fuga
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
    '/api/club_assesments/{club_assesment}':
        get:
            summary: 'Display the specified ClubAssesment.'
            description: 'GET|HEAD /clubAssesments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Club Assesment'
            security: []
        put:
            summary: 'Update the specified ClubAssesment in storage.'
            description: 'PUT/PATCH /clubAssesments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Club Assesment'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 2
                                enjoy_practice_routines:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_participated_in_competitions:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_selected_to_represent:
                                    type: boolean
                                    description: ''
                                    example: false
                                competitions:
                                    type: string
                                    description: ''
                                    example: fuga
                                motivation:
                                    type: string
                                    description: ''
                                    example: cupiditate
                                achievement:
                                    type: string
                                    description: ''
                                    example: esse
                                admired_sportsperson:
                                    type: string
                                    description: ''
                                    example: exercitationem
                                top_athlete_plans:
                                    type: string
                                    description: ''
                                    example: iste
                                current_team:
                                    type: string
                                    description: ''
                                    example: aut
                                date_joined_team:
                                    type: string
                                    description: ''
                                    example: {  }
                                favourite_jersey_number:
                                    type: string
                                    description: ''
                                    example: molestiae
                                nickname:
                                    type: string
                                    description: ''
                                    example: accusamus
                                favourite_sports_team:
                                    type: string
                                    description: ''
                                    example: quas
                                why_like_team:
                                    type: string
                                    description: ''
                                    example: natus
                                no_of_teams_played_for:
                                    type: integer
                                    description: ''
                                    example: 10
                                why_leave:
                                    type: string
                                    description: ''
                                    example: aut
                                can_improve_in_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_like_coach_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                positions_play:
                                    type: string
                                    description: ''
                                    example: laudantium
                                preferred_foot:
                                    type: string
                                    description: ''
                                    example: blanditiis
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified ClubAssesment from storage.'
            description: 'DELETE /clubAssesments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Club Assesment'
            security: []
        parameters:
            -
                in: path
                name: club_assesment
                description: ''
                example: ea
                required: true
                schema:
                    type: string
    /oauth/authorize:
        get:
            summary: 'Authorize a client to access the user''s account.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Approve the authorization request.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        delete:
            summary: 'Deny the authorization request.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/token:
        post:
            summary: 'Authorize a client to access the user''s account.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/tokens:
        get:
            summary: 'Get all of the authorized tokens for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    '/oauth/tokens/{token_id}':
        delete:
            summary: 'Delete the given token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token_id
                description: ''
                example: reprehenderit
                required: true
                schema:
                    type: string
    /oauth/token/refresh:
        post:
            summary: 'Get a fresh transient token cookie for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/clients:
        get:
            summary: 'Get all of the clients for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Store a new client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/oauth/clients/{client_id}':
        put:
            summary: 'Update the given client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        delete:
            summary: 'Delete the given client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: client_id
                description: ''
                example: est
                required: true
                schema:
                    type: string
    /oauth/scopes:
        get:
            summary: 'Get all of the available scopes for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /oauth/personal-access-tokens:
        get:
            summary: 'Get all of the personal access tokens for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Create a new personal access token for the user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/oauth/personal-access-tokens/{token_id}':
        delete:
            summary: 'Delete the given token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token_id
                description: ''
                example: sapiente
                required: true
                schema:
                    type: string
    /api/user:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Laravel</title>\n\n        <!-- Fonts -->\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n\n        <!-- Styles -->\n        <style>\n            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-t{border-top-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@media (min-width:640px){.sm\\:rounded-lg{border-radius:.5rem}.sm\\:block{display:block}.sm\\:items-center{align-items:center}.sm\\:justify-start{justify-content:flex-start}.sm\\:justify-between{justify-content:space-between}.sm\\:h-20{height:5rem}.sm\\:ml-0{margin-left:0}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pt-0{padding-top:0}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width:768px){.md\\:border-t-0{border-top-width:0}.md\\:border-l{border-left-width:1px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}}\n        </style>\n\n        <style>\n            body {\n                font-family: 'Nunito';\n            }\n        </style>\n    </head>\n    <body class=\"antialiased\">\n        <div class=\"relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0\">\n            \n            <div class=\"max-w-6xl mx-auto sm:px-6 lg:px-8\">\n                <div class=\"flex justify-center pt-8 sm:justify-start sm:pt-0\">\n                    <svg viewBox=\"0 0 651 192\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-auto text-gray-700 sm:h-20\">\n                        <g clip-path=\"url(#clip0)\" fill=\"#EF3B2D\">\n                            <path d=\"M248.032 44.676h-16.466v100.23h47.394v-14.748h-30.928V44.676zM337.091 87.202c-2.101-3.341-5.083-5.965-8.949-7.875-3.865-1.909-7.756-2.864-11.669-2.864-5.062 0-9.69.931-13.89 2.792-4.201 1.861-7.804 4.417-10.811 7.661-3.007 3.246-5.347 6.993-7.016 11.239-1.672 4.249-2.506 8.713-2.506 13.389 0 4.774.834 9.26 2.506 13.459 1.669 4.202 4.009 7.925 7.016 11.169 3.007 3.246 6.609 5.799 10.811 7.66 4.199 1.861 8.828 2.792 13.89 2.792 3.913 0 7.804-.955 11.669-2.863 3.866-1.908 6.849-4.533 8.949-7.875v9.021h15.607V78.182h-15.607v9.02zm-1.431 32.503c-.955 2.578-2.291 4.821-4.009 6.73-1.719 1.91-3.795 3.437-6.229 4.582-2.435 1.146-5.133 1.718-8.091 1.718-2.96 0-5.633-.572-8.019-1.718-2.387-1.146-4.438-2.672-6.156-4.582-1.719-1.909-3.032-4.152-3.938-6.73-.909-2.577-1.36-5.298-1.36-8.161 0-2.864.451-5.585 1.36-8.162.905-2.577 2.219-4.819 3.938-6.729 1.718-1.908 3.77-3.437 6.156-4.582 2.386-1.146 5.059-1.718 8.019-1.718 2.958 0 5.656.572 8.091 1.718 2.434 1.146 4.51 2.674 6.229 4.582 1.718 1.91 3.054 4.152 4.009 6.729.953 2.577 1.432 5.298 1.432 8.162-.001 2.863-.479 5.584-1.432 8.161zM463.954 87.202c-2.101-3.341-5.083-5.965-8.949-7.875-3.865-1.909-7.756-2.864-11.669-2.864-5.062 0-9.69.931-13.89 2.792-4.201 1.861-7.804 4.417-10.811 7.661-3.007 3.246-5.347 6.993-7.016 11.239-1.672 4.249-2.506 8.713-2.506 13.389 0 4.774.834 9.26 2.506 13.459 1.669 4.202 4.009 7.925 7.016 11.169 3.007 3.246 6.609 5.799 10.811 7.66 4.199 1.861 8.828 2.792 13.89 2.792 3.913 0 7.804-.955 11.669-2.863 3.866-1.908 6.849-4.533 8.949-7.875v9.021h15.607V78.182h-15.607v9.02zm-1.432 32.503c-.955 2.578-2.291 4.821-4.009 6.73-1.719 1.91-3.795 3.437-6.229 4.582-2.435 1.146-5.133 1.718-8.091 1.718-2.96 0-5.633-.572-8.019-1.718-2.387-1.146-4.438-2.672-6.156-4.582-1.719-1.909-3.032-4.152-3.938-6.73-.909-2.577-1.36-5.298-1.36-8.161 0-2.864.451-5.585 1.36-8.162.905-2.577 2.219-4.819 3.938-6.729 1.718-1.908 3.77-3.437 6.156-4.582 2.386-1.146 5.059-1.718 8.019-1.718 2.958 0 5.656.572 8.091 1.718 2.434 1.146 4.51 2.674 6.229 4.582 1.718 1.91 3.054 4.152 4.009 6.729.953 2.577 1.432 5.298 1.432 8.162 0 2.863-.479 5.584-1.432 8.161zM650.772 44.676h-15.606v100.23h15.606V44.676zM365.013 144.906h15.607V93.538h26.776V78.182h-42.383v66.724zM542.133 78.182l-19.616 51.096-19.616-51.096h-15.808l25.617 66.724h19.614l25.617-66.724h-15.808zM591.98 76.466c-19.112 0-34.239 15.706-34.239 35.079 0 21.416 14.641 35.079 36.239 35.079 12.088 0 19.806-4.622 29.234-14.688l-10.544-8.158c-.006.008-7.958 10.449-19.832 10.449-13.802 0-19.612-11.127-19.612-16.884h51.777c2.72-22.043-11.772-40.877-33.023-40.877zm-18.713 29.28c.12-1.284 1.917-16.884 18.589-16.884 16.671 0 18.697 15.598 18.813 16.884h-37.402zM184.068 43.892c-.024-.088-.073-.165-.104-.25-.058-.157-.108-.316-.191-.46-.056-.097-.137-.176-.203-.265-.087-.117-.161-.242-.265-.345-.085-.086-.194-.148-.29-.223-.109-.085-.206-.182-.327-.252l-.002-.001-.002-.002-35.648-20.524a2.971 2.971 0 00-2.964 0l-35.647 20.522-.002.002-.002.001c-.121.07-.219.167-.327.252-.096.075-.205.138-.29.223-.103.103-.178.228-.265.345-.066.089-.147.169-.203.265-.083.144-.133.304-.191.46-.031.085-.08.162-.104.25-.067.249-.103.51-.103.776v38.979l-29.706 17.103V24.493a3 3 0 00-.103-.776c-.024-.088-.073-.165-.104-.25-.058-.157-.108-.316-.191-.46-.056-.097-.137-.176-.203-.265-.087-.117-.161-.242-.265-.345-.085-.086-.194-.148-.29-.223-.109-.085-.206-.182-.327-.252l-.002-.001-.002-.002L40.098 1.396a2.971 2.971 0 00-2.964 0L1.487 21.919l-.002.002-.002.001c-.121.07-.219.167-.327.252-.096.075-.205.138-.29.223-.103.103-.178.228-.265.345-.066.089-.147.169-.203.265-.083.144-.133.304-.191.46-.031.085-.08.162-.104.25-.067.249-.103.51-.103.776v122.09c0 1.063.568 2.044 1.489 2.575l71.293 41.045c.156.089.324.143.49.202.078.028.15.074.23.095a2.98 2.98 0 001.524 0c.069-.018.132-.059.2-.083.176-.061.354-.119.519-.214l71.293-41.045a2.971 2.971 0 001.489-2.575v-38.979l34.158-19.666a2.971 2.971 0 001.489-2.575V44.666a3.075 3.075 0 00-.106-.774zM74.255 143.167l-29.648-16.779 31.136-17.926.001-.001 34.164-19.669 29.674 17.084-21.772 12.428-43.555 24.863zm68.329-76.259v33.841l-12.475-7.182-17.231-9.92V49.806l12.475 7.182 17.231 9.92zm2.97-39.335l29.693 17.095-29.693 17.095-29.693-17.095 29.693-17.095zM54.06 114.089l-12.475 7.182V46.733l17.231-9.92 12.475-7.182v74.537l-17.231 9.921zM38.614 7.398l29.693 17.095-29.693 17.095L8.921 24.493 38.614 7.398zM5.938 29.632l12.475 7.182 17.231 9.92v79.676l.001.005-.001.006c0 .114.032.221.045.333.017.146.021.294.059.434l.002.007c.032.117.094.222.14.334.051.124.088.255.156.371a.036.036 0 00.004.009c.061.105.149.191.222.288.081.105.149.22.244.314l.008.01c.084.083.19.142.284.215.106.083.202.178.32.247l.013.005.011.008 34.139 19.321v34.175L5.939 144.867V29.632h-.001zm136.646 115.235l-65.352 37.625V148.31l48.399-27.628 16.953-9.677v33.862zm35.646-61.22l-29.706 17.102V66.908l17.231-9.92 12.475-7.182v33.841z\"/>\n                        </g>\n                    </svg>\n                </div>\n\n                <div class=\"mt-8 bg-white dark:bg-gray-800 overflow-hidden shadow sm:rounded-lg\">\n                    <div class=\"grid grid-cols-1 md:grid-cols-2\">\n                        <div class=\"p-6\">\n                            <div class=\"flex items-center\">\n                                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" class=\"w-8 h-8 text-gray-500\"><path d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"></path></svg>\n                                <div class=\"ml-4 text-lg leading-7 font-semibold\"><a href=\"https://laravel.com/docs\" class=\"underline text-gray-900 dark:text-white\">Documentation</a></div>\n                            </div>\n\n                            <div class=\"ml-12\">\n                                <div class=\"mt-2 text-gray-600 dark:text-gray-400 text-sm\">\n                                    Laravel has wonderful, thorough documentation covering every aspect of the framework. Whether you are new to the framework or have previous experience with Laravel, we recommend reading all of the documentation from beginning to end.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-6 border-t border-gray-200 dark:border-gray-700 md:border-t-0 md:border-l\">\n                            <div class=\"flex items-center\">\n                                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" class=\"w-8 h-8 text-gray-500\"><path d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"></path><path d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg>\n                                <div class=\"ml-4 text-lg leading-7 font-semibold\"><a href=\"https://laracasts.com\" class=\"underline text-gray-900 dark:text-white\">Laracasts</a></div>\n                            </div>\n\n                            <div class=\"ml-12\">\n                                <div class=\"mt-2 text-gray-600 dark:text-gray-400 text-sm\">\n                                    Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-6 border-t border-gray-200 dark:border-gray-700\">\n                            <div class=\"flex items-center\">\n                                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" class=\"w-8 h-8 text-gray-500\"><path d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\"></path></svg>\n                                <div class=\"ml-4 text-lg leading-7 font-semibold\"><a href=\"https://laravel-news.com/\" class=\"underline text-gray-900 dark:text-white\">Laravel News</a></div>\n                            </div>\n\n                            <div class=\"ml-12\">\n                                <div class=\"mt-2 text-gray-600 dark:text-gray-400 text-sm\">\n                                    Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"p-6 border-t border-gray-200 dark:border-gray-700 md:border-l\">\n                            <div class=\"flex items-center\">\n                                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" class=\"w-8 h-8 text-gray-500\"><path d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                <div class=\"ml-4 text-lg leading-7 font-semibold text-gray-900 dark:text-white\">Vibrant Ecosystem</div>\n                            </div>\n\n                            <div class=\"ml-12\">\n                                <div class=\"mt-2 text-gray-600 dark:text-gray-400 text-sm\">\n                                    Laravel's robust library of first-party tools and libraries, such as <a href=\"https://forge.laravel.com\" class=\"underline\">Forge</a>, <a href=\"https://vapor.laravel.com\" class=\"underline\">Vapor</a>, <a href=\"https://nova.laravel.com\" class=\"underline\">Nova</a>, and <a href=\"https://envoyer.io\" class=\"underline\">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href=\"https://laravel.com/docs/billing\" class=\"underline\">Cashier</a>, <a href=\"https://laravel.com/docs/dusk\" class=\"underline\">Dusk</a>, <a href=\"https://laravel.com/docs/broadcasting\" class=\"underline\">Echo</a>, <a href=\"https://laravel.com/docs/horizon\" class=\"underline\">Horizon</a>, <a href=\"https://laravel.com/docs/sanctum\" class=\"underline\">Sanctum</a>, <a href=\"https://laravel.com/docs/telescope\" class=\"underline\">Telescope</a>, and more.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"flex justify-center mt-4 sm:items-center sm:justify-between\">\n                    <div class=\"text-center text-sm text-gray-500 sm:text-left\">\n                        <div class=\"flex items-center\">\n                            <svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"-mt-px w-5 h-5 text-gray-400\">\n                                <path d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                            </svg>\n\n                            <a href=\"https://laravel.bigcartel.com\" class=\"ml-1 underline\">\n                                Shop\n                            </a>\n\n                            <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" class=\"ml-4 -mt-px w-5 h-5 text-gray-400\">\n                                <path d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"></path>\n                            </svg>\n\n                            <a href=\"https://github.com/sponsors/taylorotwell\" class=\"ml-1 underline\">\n                                Sponsor\n                            </a>\n                        </div>\n                    </div>\n\n                    <div class=\"ml-4 text-center text-sm text-gray-500 sm:text-right sm:ml-0\">\n                        Laravel v8.20.1 (PHP v7.4.12)\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n"
            tags:
                - Endpoints
            security: []
    /home:
        get:
            summary: 'Show the application dashboard.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /api/health_predictors:
        get:
            summary: 'Display a listing of the HealthPredictor.'
            description: 'GET|HEAD /healthPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Health Predictor'
            security: []
        post:
            summary: 'Store a newly created HealthPredictor in storage.'
            description: 'POST /healthPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Health Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 6
                                blood_group:
                                    type: string
                                    description: ''
                                    example: molestias
                                is_hereditary_issue:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_current_health_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_receiving_treatment:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_long_term_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                hereditary_issue:
                                    type: string
                                    description: ''
                                    example: quia
                                long_term_injury:
                                    type: string
                                    description: ''
                                    example: quia
                                treatment_type:
                                    type: string
                                    description: ''
                                    example: repellat
                                current_health_injury:
                                    type: string
                                    description: ''
                                    example: dicta
                                is_personal_health_challenge:
                                    type: boolean
                                    description: ''
                                    example: false
                                personal_health_challenge:
                                    type: string
                                    description: ''
                                    example: voluptatibus
                                injury_seriousness:
                                    type: string
                                    description: ''
                                    example: nobis
                                medical_treatment:
                                    type: string
                                    description: ''
                                    example: veritatis
                                injury_location:
                                    type: string
                                    description: ''
                                    example: eveniet
                                genotype:
                                    type: string
                                    description: ''
                                    example: quam
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
    '/api/health_predictors/{health_predictor}':
        get:
            summary: 'Display the specified HealthPredictor.'
            description: 'GET|HEAD /healthPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Health Predictor'
            security: []
        put:
            summary: 'Update the specified HealthPredictor in storage.'
            description: 'PUT/PATCH /healthPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Health Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 1
                                blood_group:
                                    type: string
                                    description: ''
                                    example: voluptas
                                is_hereditary_issue:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_current_health_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_receiving_treatment:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_long_term_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                hereditary_issue:
                                    type: string
                                    description: ''
                                    example: rerum
                                long_term_injury:
                                    type: string
                                    description: ''
                                    example: esse
                                treatment_type:
                                    type: string
                                    description: ''
                                    example: saepe
                                current_health_injury:
                                    type: string
                                    description: ''
                                    example: veniam
                                is_personal_health_challenge:
                                    type: boolean
                                    description: ''
                                    example: false
                                personal_health_challenge:
                                    type: string
                                    description: ''
                                    example: consequatur
                                injury_seriousness:
                                    type: string
                                    description: ''
                                    example: officiis
                                medical_treatment:
                                    type: string
                                    description: ''
                                    example: nihil
                                injury_location:
                                    type: string
                                    description: ''
                                    example: pariatur
                                genotype:
                                    type: string
                                    description: ''
                                    example: ea
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified HealthPredictor from storage.'
            description: 'DELETE /healthPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Health Predictor'
            security: []
        parameters:
            -
                in: path
                name: health_predictor
                description: ''
                example: laboriosam
                required: true
                schema:
                    type: string
    /api/personal_details:
        get:
            summary: 'Display a listing of the PersonalDetails.'
            description: 'GET|HEAD /personalDetails'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Personal Details'
            security: []
        post:
            summary: 'Store a newly created PersonalDetails in storage.'
            description: 'POST /personalDetails'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Personal Details'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                first_name:
                                    type: string
                                    description: ''
                                    example: rerum
                                marital_status:
                                    type: string
                                    description: ''
                                    example: enim
                                mother_maiden_name:
                                    type: string
                                    description: ''
                                    example: aut
                                last_name:
                                    type: string
                                    description: ''
                                    example: vel
                                height:
                                    type: string
                                    description: ''
                                    example: in
                                body_weight:
                                    type: string
                                    description: ''
                                    example: minima
                                phone:
                                    type: string
                                    description: ''
                                    example: voluptas
                                sm_handle:
                                    type: string
                                    description: ''
                                    example: mollitia
                                highest_education:
                                    type: string
                                    description: ''
                                    example: ut
                                place_of_birth:
                                    type: string
                                    description: ''
                                    example: aliquid
                                school:
                                    type: string
                                    description: ''
                                    example: tempora
                                career_preference:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                is_still_schooling:
                                    type: boolean
                                    description: ''
                                    example: false
                                contact_address:
                                    type: string
                                    description: ''
                                    example: voluptate
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 4
                                state_of_origin:
                                    type: integer
                                    description: ''
                                    example: 5
                                zipcode:
                                    type: integer
                                    description: ''
                                    example: 17
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
    '/api/personal_details/{personal_detail}':
        get:
            summary: 'Display the specified PersonalDetails.'
            description: 'GET|HEAD /personalDetails/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Personal Details'
            security: []
        put:
            summary: 'Update the specified PersonalDetails in storage.'
            description: 'PUT/PATCH /personalDetails/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Personal Details'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: est
                                marital_status:
                                    type: string
                                    description: ''
                                    example: commodi
                                mother_maiden_name:
                                    type: string
                                    description: ''
                                    example: beatae
                                last_name:
                                    type: string
                                    description: ''
                                    example: ipsa
                                height:
                                    type: string
                                    description: ''
                                    example: quaerat
                                body_weight:
                                    type: string
                                    description: ''
                                    example: dolor
                                phone:
                                    type: string
                                    description: ''
                                    example: amet
                                sm_handle:
                                    type: string
                                    description: ''
                                    example: est
                                highest_education:
                                    type: string
                                    description: ''
                                    example: dolores
                                place_of_birth:
                                    type: string
                                    description: ''
                                    example: porro
                                school:
                                    type: string
                                    description: ''
                                    example: tempora
                                career_preference:
                                    type: string
                                    description: ''
                                    example: maxime
                                is_still_schooling:
                                    type: boolean
                                    description: ''
                                    example: false
                                contact_address:
                                    type: string
                                    description: ''
                                    example: ut
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 4
                                state_of_origin:
                                    type: integer
                                    description: ''
                                    example: 5
                                zipcode:
                                    type: integer
                                    description: ''
                                    example: 15
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified PersonalDetails from storage.'
            description: 'DELETE /personalDetails/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Personal Details'
            security: []
        parameters:
            -
                in: path
                name: personal_detail
                description: ''
                example: rerum
                required: true
                schema:
                    type: string
    /api/psych_predictors:
        get:
            summary: 'Display a listing of the PsychPredictor.'
            description: 'GET|HEAD /psychPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Psych Predictor'
            security: []
        post:
            summary: 'Store a newly created PsychPredictor in storage.'
            description: 'POST /psychPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Psych Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 15
                                time_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 4
                                hours_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 13
                                is_parent_in_support:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_team_player:
                                    type: boolean
                                    description: ''
                                    example: false
                                parent_in_support_reason:
                                    type: string
                                    description: ''
                                    example: ea
                                challenges:
                                    type: string
                                    description: ''
                                    example: omnis
                                greatest_motivation:
                                    type: string
                                    description: ''
                                    example: autem
                                strength:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                weakness:
                                    type: string
                                    description: ''
                                    example: nemo
                                can_overcome_challenges:
                                    type: boolean
                                    description: ''
                                    example: false
                                time_start_sport:
                                    type: string
                                    description: ''
                                    example: id
                                rating_sports:
                                    type: string
                                    description: ''
                                    example: dicta
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
                                - time_practice_in_week
                                - hours_practice_in_week
            security: []
    '/api/psych_predictors/{psych_predictor}':
        get:
            summary: 'Display the specified PsychPredictor.'
            description: 'GET|HEAD /psychPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Psych Predictor'
            security: []
        put:
            summary: 'Update the specified PsychPredictor in storage.'
            description: 'PUT/PATCH /psychPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Psych Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 14
                                time_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 7
                                hours_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 14
                                is_parent_in_support:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_team_player:
                                    type: boolean
                                    description: ''
                                    example: false
                                parent_in_support_reason:
                                    type: string
                                    description: ''
                                    example: velit
                                challenges:
                                    type: string
                                    description: ''
                                    example: doloremque
                                greatest_motivation:
                                    type: string
                                    description: ''
                                    example: et
                                strength:
                                    type: string
                                    description: ''
                                    example: qui
                                weakness:
                                    type: string
                                    description: ''
                                    example: corporis
                                can_overcome_challenges:
                                    type: boolean
                                    description: ''
                                    example: false
                                time_start_sport:
                                    type: string
                                    description: ''
                                    example: alias
                                rating_sports:
                                    type: string
                                    description: ''
                                    example: qui
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
                                - time_practice_in_week
                                - hours_practice_in_week
            security: []
        delete:
            summary: 'Remove the specified PsychPredictor from storage.'
            description: 'DELETE /psychPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Psych Predictor'
            security: []
        parameters:
            -
                in: path
                name: psych_predictor
                description: ''
                example: voluptatem
                required: true
                schema:
                    type: string
    /api/skill_reports:
        get:
            summary: 'Display a listing of the SkillReport.'
            description: 'GET|HEAD /skillReports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Report'
            security: []
        post:
            summary: 'Store a newly created SkillReport in storage.'
            description: 'POST /skillReports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Report'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 5
                                speed:
                                    type: string
                                    description: ''
                                    example: dolorum
                                passing:
                                    type: string
                                    description: ''
                                    example: consequatur
                                shooting:
                                    type: string
                                    description: ''
                                    example: distinctio
                                dribbling:
                                    type: string
                                    description: ''
                                    example: nihil
                                heading:
                                    type: string
                                    description: ''
                                    example: esse
                                ball_control:
                                    type: string
                                    description: ''
                                    example: id
                                fitness:
                                    type: string
                                    description: ''
                                    example: impedit
                                movement:
                                    type: string
                                    description: ''
                                    example: laudantium
                                awareness:
                                    type: string
                                    description: ''
                                    example: molestias
                                decisions:
                                    type: string
                                    description: ''
                                    example: deserunt
                                workrate:
                                    type: string
                                    description: ''
                                    example: et
                                strength:
                                    type: string
                                    description: ''
                                    example: vitae
                                crossing:
                                    type: string
                                    description: ''
                                    example: laborum
                                finishing:
                                    type: string
                                    description: ''
                                    example: vitae
                                positioning:
                                    type: string
                                    description: ''
                                    example: odio
                                anticipation:
                                    type: string
                                    description: ''
                                    example: dolor
                                total:
                                    type: string
                                    description: ''
                                    example: est
                                overall_grade:
                                    type: string
                                    description: ''
                                    example: laudantium
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
    '/api/skill_reports/{skill_report}':
        get:
            summary: 'Display the specified SkillReport.'
            description: 'GET|HEAD /skillReports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Report'
            security: []
        put:
            summary: 'Update the specified SkillReport in storage.'
            description: 'PUT/PATCH /skillReports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Report'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 11
                                speed:
                                    type: string
                                    description: ''
                                    example: ut
                                passing:
                                    type: string
                                    description: ''
                                    example: nesciunt
                                shooting:
                                    type: string
                                    description: ''
                                    example: perferendis
                                dribbling:
                                    type: string
                                    description: ''
                                    example: molestiae
                                heading:
                                    type: string
                                    description: ''
                                    example: laboriosam
                                ball_control:
                                    type: string
                                    description: ''
                                    example: officiis
                                fitness:
                                    type: string
                                    description: ''
                                    example: tempore
                                movement:
                                    type: string
                                    description: ''
                                    example: voluptas
                                awareness:
                                    type: string
                                    description: ''
                                    example: molestias
                                decisions:
                                    type: string
                                    description: ''
                                    example: ad
                                workrate:
                                    type: string
                                    description: ''
                                    example: ut
                                strength:
                                    type: string
                                    description: ''
                                    example: iste
                                crossing:
                                    type: string
                                    description: ''
                                    example: libero
                                finishing:
                                    type: string
                                    description: ''
                                    example: nulla
                                positioning:
                                    type: string
                                    description: ''
                                    example: sed
                                anticipation:
                                    type: string
                                    description: ''
                                    example: provident
                                total:
                                    type: string
                                    description: ''
                                    example: ipsa
                                overall_grade:
                                    type: string
                                    description: ''
                                    example: corporis
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified SkillReport from storage.'
            description: 'DELETE /skillReports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Report'
            security: []
        parameters:
            -
                in: path
                name: skill_report
                description: ''
                example: accusantium
                required: true
                schema:
                    type: string
    /api/skill_tests:
        get:
            summary: 'Display a listing of the SkillTest.'
            description: 'GET|HEAD /skillTests'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Test'
            security: []
        post:
            summary: 'Store a newly created SkillTest in storage.'
            description: 'POST /skillTests'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Test'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: repellendus
                                sport_id:
                                    type: integer
                                    description: ''
                                    example: 19
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - sport_id
            security: []
    '/api/skill_tests/{skill_test}':
        get:
            summary: 'Display the specified SkillTest.'
            description: 'GET|HEAD /skillTests/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Test'
            security: []
        put:
            summary: 'Update the specified SkillTest in storage.'
            description: 'PUT/PATCH /skillTests/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Test'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: ipsam
                                sport_id:
                                    type: integer
                                    description: ''
                                    example: 13
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - sport_id
            security: []
        delete:
            summary: 'Remove the specified SkillTest from storage.'
            description: 'DELETE /skillTests/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Test'
            security: []
        parameters:
            -
                in: path
                name: skill_test
                description: ''
                example: iure
                required: true
                schema:
                    type: string
    /api/sports:
        get:
            summary: 'Display a listing of the Sport.'
            description: 'GET|HEAD /sports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Sport
            security: []
        post:
            summary: 'Store a newly created Sport in storage.'
            description: 'POST /sports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Sport
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: esse
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
    '/api/sports/{sport}':
        get:
            summary: 'Display the specified Sport.'
            description: 'GET|HEAD /sports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Sport
            security: []
        put:
            summary: 'Update the specified Sport in storage.'
            description: 'PUT/PATCH /sports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Sport
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: magnam
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified Sport from storage.'
            description: 'DELETE /sports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Sport
            security: []
        parameters:
            -
                in: path
                name: sport
                description: ''
                example: inventore
                required: true
                schema:
                    type: string
    /api/videos:
        get:
            summary: 'Display a listing of the Video.'
            description: 'GET|HEAD /videos'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Video
            security: []
        post:
            summary: 'Store a newly created Video in storage.'
            description: 'POST /videos'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Video
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 1
                                type_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                skill_test_id:
                                    type: integer
                                    description: ''
                                    example: 18
                                url:
                                    type: string
                                    description: ''
                                    example: placeat
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
                                - type_id
                                - skill_test_id
                                - url
            security: []
    '/api/videos/{video}':
        get:
            summary: 'Display the specified Video.'
            description: 'GET|HEAD /videos/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Video
            security: []
        put:
            summary: 'Update the specified Video in storage.'
            description: 'PUT/PATCH /videos/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Video
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 10
                                type_id:
                                    type: integer
                                    description: ''
                                    example: 17
                                skill_test_id:
                                    type: integer
                                    description: ''
                                    example: 13
                                url:
                                    type: string
                                    description: ''
                                    example: quasi
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
                                - type_id
                                - skill_test_id
                                - url
            security: []
        delete:
            summary: 'Remove the specified Video from storage.'
            description: 'DELETE /videos/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Video
            security: []
        parameters:
            -
                in: path
                name: video
                description: ''
                example: dolores
                required: true
                schema:
                    type: string
    /api/video_types:
        get:
            summary: 'Display a listing of the VideoType.'
            description: 'GET|HEAD /videoTypes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Video Type'
            security: []
        post:
            summary: 'Store a newly created VideoType in storage.'
            description: 'POST /videoTypes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Video Type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: eveniet
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
    '/api/video_types/{video_type}':
        get:
            summary: 'Display the specified VideoType.'
            description: 'GET|HEAD /videoTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Video Type'
            security: []
        put:
            summary: 'Update the specified VideoType in storage.'
            description: 'PUT/PATCH /videoTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Video Type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: sit
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified VideoType from storage.'
            description: 'DELETE /videoTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Video Type'
            security: []
        parameters:
            -
                in: path
                name: video_type
                description: ''
                example: dolores
                required: true
                schema:
                    type: string
