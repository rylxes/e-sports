openapi: 3.0.3
info:
    title: 'E-sports App API Documentation'
    description: 'E-sports App API Documentation'
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /api/academies/register:
        post:
            summary: 'Store a newly created Academy in storage.'
            description: 'POST /academies'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Academy
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: mollitia
                                email:
                                    type: string
                                    description: ''
                                    example: esse
                                name:
                                    type: string
                                    description: ''
                                    example: quos
                                reg_date:
                                    type: string
                                    description: ''
                                    example: {  }
                                profile_url:
                                    type: string
                                    description: ''
                                    example: qui
                                academy_age:
                                    type: string
                                    description: ''
                                    example: ipsum
                                capacity:
                                    type: string
                                    description: ''
                                    example: ut
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 12
                                location:
                                    type: string
                                    description: ''
                                    example: et
                            required:
                                - password
                                - email
            security: []
    /api/academies/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Academy
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/academies/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Academy
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/academies:
        get:
            summary: 'Display a listing of the Academy.'
            description: 'GET|HEAD /academies'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Academy
            security: []
        post:
            summary: 'Store a newly created Academy in storage.'
            description: 'POST /academies'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Academy
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: veniam
                                email:
                                    type: string
                                    description: ''
                                    example: autem
                                name:
                                    type: string
                                    description: ''
                                    example: assumenda
                                reg_date:
                                    type: string
                                    description: ''
                                    example: {  }
                                profile_url:
                                    type: string
                                    description: ''
                                    example: nihil
                                academy_age:
                                    type: string
                                    description: ''
                                    example: similique
                                capacity:
                                    type: string
                                    description: ''
                                    example: veritatis
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 13
                                location:
                                    type: string
                                    description: ''
                                    example: asperiores
                            required:
                                - password
                                - email
            security: []
    '/api/academies/{academy}':
        get:
            summary: 'Display the specified Academy.'
            description: 'GET|HEAD /academies/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Academy
            security: []
        put:
            summary: 'Update the specified Academy in storage.'
            description: 'PUT/PATCH /academies/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Academy
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: voluptas
                                reg_date:
                                    type: string
                                    description: ''
                                    example: {  }
                                profile_url:
                                    type: string
                                    description: ''
                                    example: numquam
                                academy_age:
                                    type: string
                                    description: ''
                                    example: sit
                                capacity:
                                    type: string
                                    description: ''
                                    example: aut
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 17
                                location:
                                    type: string
                                    description: ''
                                    example: nihil
            security: []
        delete:
            summary: 'Remove the specified Academy from storage.'
            description: 'DELETE /academies/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Academy
            security: []
        parameters:
            -
                in: path
                name: academy
                description: ''
                example: illo
                required: true
                schema:
                    type: string
    /api/agents/register:
        post:
            summary: 'Store a newly created Agent in storage.'
            description: 'POST /agents'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agent
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: temporibus
                                first_name:
                                    type: string
                                    description: ''
                                    example: et
                                middle_name:
                                    type: string
                                    description: ''
                                    example: et
                                last_name:
                                    type: string
                                    description: ''
                                    example: corporis
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: earum
                                sports:
                                    type: string
                                    description: ''
                                    example: deleniti
                                language:
                                    type: string
                                    description: ''
                                    example: harum
                                nationality:
                                    type: string
                                    description: ''
                                    example: et
                                city_id:
                                    type: string
                                    description: ''
                                    example: est
                                email:
                                    type: string
                                    description: ''
                                    example: est
                                employment_type:
                                    type: string
                                    description: ''
                                    example: eum
                            required:
                                - password
            security: []
    /api/agents/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agent
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/agents/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agent
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/agents:
        get:
            summary: 'Display a listing of the Agent.'
            description: 'GET|HEAD /agents'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Agent
            security: []
        post:
            summary: 'Store a newly created Agent in storage.'
            description: 'POST /agents'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agent
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: optio
                                first_name:
                                    type: string
                                    description: ''
                                    example: pariatur
                                middle_name:
                                    type: string
                                    description: ''
                                    example: aperiam
                                last_name:
                                    type: string
                                    description: ''
                                    example: quia
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: qui
                                sports:
                                    type: string
                                    description: ''
                                    example: ipsum
                                language:
                                    type: string
                                    description: ''
                                    example: sed
                                nationality:
                                    type: string
                                    description: ''
                                    example: est
                                city_id:
                                    type: string
                                    description: ''
                                    example: rem
                                email:
                                    type: string
                                    description: ''
                                    example: ad
                                employment_type:
                                    type: string
                                    description: ''
                                    example: id
                            required:
                                - password
            security: []
    '/api/agents/{agent}':
        get:
            summary: 'Display the specified Agent.'
            description: 'GET|HEAD /agents/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Agent
            security: []
        put:
            summary: 'Update the specified Agent in storage.'
            description: 'PUT/PATCH /agents/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agent
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: deleniti
                                first_name:
                                    type: string
                                    description: ''
                                    example: voluptate
                                middle_name:
                                    type: string
                                    description: ''
                                    example: dolor
                                last_name:
                                    type: string
                                    description: ''
                                    example: reiciendis
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: sunt
                                sports:
                                    type: string
                                    description: ''
                                    example: beatae
                                language:
                                    type: string
                                    description: ''
                                    example: dolore
                                nationality:
                                    type: string
                                    description: ''
                                    example: est
                                city_id:
                                    type: string
                                    description: ''
                                    example: et
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 7
                                email:
                                    type: string
                                    description: ''
                                    example: occaecati
                                employment_type:
                                    type: string
                                    description: ''
                                    example: iusto
                                qualifications:
                                    type: string
                                    description: ''
                                    example: vitae
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified Agent from storage.'
            description: 'DELETE /agents/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agent
            security: []
        parameters:
            -
                in: path
                name: agent
                description: ''
                example: nulla
                required: true
                schema:
                    type: string
    /api/login:
        post:
            summary: 'Handle a login request to the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: leffler.alysson@example.net
                                password:
                                    type: string
                                    description: ''
                                    example: ut
                            required:
                                - email
                                - password
            security: []
    /api/logout:
        post:
            summary: 'Log the user out of the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/register:
        post:
            summary: 'Handle a registration request for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: eligendi
                                last_name:
                                    type: string
                                    description: ''
                                    example: pariatur
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: kennith.hoeger@example.org
                                password:
                                    type: string
                                    description: ''
                                    example: dolor
                                password_confirmation:
                                    type: string
                                    description: ''
                                    example: doloremque
                            required:
                                - first_name
                                - last_name
                                - email
                                - password
                                - password_confirmation
            security: []
    /api/password/email:
        post:
            summary: 'Send a reset link to the given user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: ally.barton@example.net
                            required:
                                - email
            security: []
    '/api/password/reset/{token}':
        get:
            summary: 'Display the password reset view for the given token.'
            description: 'If no token is present, display the link request form.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>E-sports</title>\n\n    <!-- Tell the browser to be responsive to screen width -->\n    <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\n\n    <!-- Bootstrap 3.3.7 -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n    <!-- Font Awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n    <!-- Ionicons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css\">\n\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/AdminLTE.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/skins/_all-skins.min.css\">\n\n    <!-- iCheck -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/skins/square/_all.css\">\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n    <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n</head>\n<body class=\"hold-transition login-page\">\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <a href=\"http://localhost/home\"><b>E-sports </b>Generator</a>\n    </div>\n\n    <!-- /.login-logo -->\n    <div class=\"login-box-body\">\n        <p class=\"login-box-msg\">Reset your password</p>\n\n        <form method=\"post\" action=\"http://localhost/password/reset\">\n            <input type=\"hidden\" name=\"_token\" value=\"A9yXjmCkWDPdA2ncHMoriEu5teww9NX4Pa6A5JrN\">\n            <input type=\"hidden\" name=\"token\" value=\"rerum\">\n\n            <div class=\"form-group has-feedback \">\n                <input type=\"email\" class=\"form-control\" name=\"email\" value=\"\" placeholder=\"Email\">\n                <span class=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\n                            </div>\n\n            <div class=\"form-group has-feedback\">\n                <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n\n                            </div>\n\n            <div class=\"form-group has-feedback\">\n                <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" placeholder=\"Confirm password\">\n                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n\n                            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <button type=\"submit\" class=\"btn btn-primary pull-right\">\n                        <i class=\"fa fa-btn fa-refresh\"></i>Reset Password\n                    </button>\n                </div>\n            </div>\n        </form>\n\n    </div>\n</div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<!-- AdminLTE App -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/js/adminlte.min.js\"></script>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/icheck.min.js\"></script>\n<script>\n    $(function () {\n        $('input').iCheck({\n            checkboxClass: 'icheckbox_square-blue',\n            radioClass: 'iradio_square-blue',\n            increaseArea: '20%' // optional\n        });\n    });\n</script>\n</body>\n</html>\n"
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: token
                description: ''
                example: rerum
                required: true
                schema:
                    type: string
    /api/password/reset:
        post:
            summary: 'Reset the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/password/confirm:
        post:
            summary: 'Confirm the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    '/api/email/verify/{id}/{hash}':
        get:
            summary: 'Mark the authenticated user''s email address as verified.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: et
                required: true
                schema:
                    type: string
            -
                in: path
                name: hash
                description: ''
                example: quia
                required: true
                schema:
                    type: string
    /api/email/resend:
        post:
            summary: 'Resend the email verification notification.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/cities/byState:
        post:
            summary: 'By State.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - City
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                state_id:
                                    type: string
                                    description: ''
                                    example: doloremque
                            required:
                                - state_id
            security: []
    /api/club_assesments:
        get:
            summary: 'Display a listing of the ClubAssesment.'
            description: 'GET|HEAD /clubAssesments'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Club Assesment'
            security: []
        post:
            summary: 'Store a newly created ClubAssesment in storage.'
            description: 'POST /clubAssesments'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Club Assesment'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                enjoy_practice_routines:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_participated_in_competitions:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_selected_to_represent:
                                    type: boolean
                                    description: ''
                                    example: false
                                competitions:
                                    type: string
                                    description: ''
                                    example: debitis
                                motivation:
                                    type: string
                                    description: ''
                                    example: quos
                                achievement:
                                    type: string
                                    description: ''
                                    example: maxime
                                admired_sportsperson:
                                    type: string
                                    description: ''
                                    example: sed
                                top_athlete_plans:
                                    type: string
                                    description: ''
                                    example: minus
                                current_team:
                                    type: string
                                    description: ''
                                    example: sit
                                date_joined_team:
                                    type: string
                                    description: ''
                                    example: {  }
                                favourite_jersey_number:
                                    type: string
                                    description: ''
                                    example: commodi
                                nickname:
                                    type: string
                                    description: ''
                                    example: qui
                                favourite_sports_team:
                                    type: string
                                    description: ''
                                    example: nostrum
                                why_like_team:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                                no_of_teams_played_for:
                                    type: integer
                                    description: ''
                                    example: 9
                                why_leave:
                                    type: string
                                    description: ''
                                    example: veritatis
                                can_improve_in_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_like_coach_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                positions_play:
                                    type: string
                                    description: ''
                                    example: quia
                                preferred_foot:
                                    type: string
                                    description: ''
                                    example: cumque
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
    '/api/club_assesments/{club_assesment}':
        get:
            summary: 'Display the specified ClubAssesment.'
            description: 'GET|HEAD /clubAssesments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Club Assesment'
            security: []
        put:
            summary: 'Update the specified ClubAssesment in storage.'
            description: 'PUT/PATCH /clubAssesments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Club Assesment'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                enjoy_practice_routines:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_participated_in_competitions:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_selected_to_represent:
                                    type: boolean
                                    description: ''
                                    example: false
                                competitions:
                                    type: string
                                    description: ''
                                    example: suscipit
                                motivation:
                                    type: string
                                    description: ''
                                    example: perferendis
                                achievement:
                                    type: string
                                    description: ''
                                    example: laudantium
                                admired_sportsperson:
                                    type: string
                                    description: ''
                                    example: expedita
                                top_athlete_plans:
                                    type: string
                                    description: ''
                                    example: consequuntur
                                current_team:
                                    type: string
                                    description: ''
                                    example: dignissimos
                                date_joined_team:
                                    type: string
                                    description: ''
                                    example: {  }
                                favourite_jersey_number:
                                    type: string
                                    description: ''
                                    example: maiores
                                nickname:
                                    type: string
                                    description: ''
                                    example: cumque
                                favourite_sports_team:
                                    type: string
                                    description: ''
                                    example: ad
                                why_like_team:
                                    type: string
                                    description: ''
                                    example: quod
                                no_of_teams_played_for:
                                    type: integer
                                    description: ''
                                    example: 15
                                why_leave:
                                    type: string
                                    description: ''
                                    example: non
                                can_improve_in_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_like_coach_team:
                                    type: boolean
                                    description: ''
                                    example: false
                                positions_play:
                                    type: string
                                    description: ''
                                    example: molestiae
                                preferred_foot:
                                    type: string
                                    description: ''
                                    example: autem
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified ClubAssesment from storage.'
            description: 'DELETE /clubAssesments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Club Assesment'
            security: []
        parameters:
            -
                in: path
                name: club_assesment
                description: ''
                example: corporis
                required: true
                schema:
                    type: string
    /api/coaches/register:
        post:
            summary: 'Store a newly created Coach in storage.'
            description: 'POST /coaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Coach
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: fugiat
                                email:
                                    type: string
                                    description: ''
                                    example: voluptas
                                first_name:
                                    type: string
                                    description: ''
                                    example: illo
                                middle_name:
                                    type: string
                                    description: ''
                                    example: illum
                                last_name:
                                    type: string
                                    description: ''
                                    example: quia
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: provident
                                coaching_age:
                                    type: string
                                    description: ''
                                    example: distinctio
                                coaching_gender:
                                    type: string
                                    description: ''
                                    example: excepturi
                                sports:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                specialization:
                                    type: string
                                    description: ''
                                    example: ut
                                language:
                                    type: string
                                    description: ''
                                    example: blanditiis
                                nationality:
                                    type: string
                                    description: ''
                                    example: vero
                                city_id:
                                    type: string
                                    description: ''
                                    example: reiciendis
                                employment_type:
                                    type: string
                                    description: ''
                                    example: error
                                team_club:
                                    type: string
                                    description: ''
                                    example: a
                            required:
                                - password
                                - email
                                - first_name
                                - last_name
            security: []
    /api/coaches/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Coach
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/coaches/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Coach
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/coaches:
        get:
            summary: 'Display a listing of the Coach.'
            description: 'GET|HEAD /coaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Coach
            security: []
        post:
            summary: 'Store a newly created Coach in storage.'
            description: 'POST /coaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Coach
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: labore
                                email:
                                    type: string
                                    description: ''
                                    example: perferendis
                                first_name:
                                    type: string
                                    description: ''
                                    example: mollitia
                                middle_name:
                                    type: string
                                    description: ''
                                    example: consequatur
                                last_name:
                                    type: string
                                    description: ''
                                    example: fugiat
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: ipsam
                                coaching_age:
                                    type: string
                                    description: ''
                                    example: dolores
                                coaching_gender:
                                    type: string
                                    description: ''
                                    example: eum
                                sports:
                                    type: string
                                    description: ''
                                    example: quam
                                specialization:
                                    type: string
                                    description: ''
                                    example: nulla
                                language:
                                    type: string
                                    description: ''
                                    example: asperiores
                                nationality:
                                    type: string
                                    description: ''
                                    example: iste
                                city_id:
                                    type: string
                                    description: ''
                                    example: id
                                employment_type:
                                    type: string
                                    description: ''
                                    example: sint
                                team_club:
                                    type: string
                                    description: ''
                                    example: totam
                            required:
                                - password
                                - email
                                - first_name
                                - last_name
            security: []
    '/api/coaches/{coach}':
        get:
            summary: 'Display the specified Coach.'
            description: 'GET|HEAD /coaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Coach
            security: []
        put:
            summary: 'Update the specified Coach in storage.'
            description: 'PUT/PATCH /coaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Coach
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: in
                                qualifications:
                                    type: string
                                    description: ''
                                    example: placeat
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 7
                                email:
                                    type: string
                                    description: ''
                                    example: voluptates
                                first_name:
                                    type: string
                                    description: ''
                                    example: natus
                                middle_name:
                                    type: string
                                    description: ''
                                    example: pariatur
                                last_name:
                                    type: string
                                    description: ''
                                    example: ut
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: quis
                                coaching_age:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                coaching_gender:
                                    type: string
                                    description: ''
                                    example: officia
                                sports:
                                    type: string
                                    description: ''
                                    example: dolorem
                                specialization:
                                    type: string
                                    description: ''
                                    example: quas
                                language:
                                    type: string
                                    description: ''
                                    example: autem
                                nationality:
                                    type: string
                                    description: ''
                                    example: autem
                                city_id:
                                    type: string
                                    description: ''
                                    example: sunt
                                employment_type:
                                    type: string
                                    description: ''
                                    example: voluptatum
                                team_club:
                                    type: string
                                    description: ''
                                    example: officiis
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified Coach from storage.'
            description: 'DELETE /coaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Coach
            security: []
        parameters:
            -
                in: path
                name: coach
                description: ''
                example: qui
                required: true
                schema:
                    type: string
    /api/countries:
        get:
            summary: 'Display a listing of the Country.'
            description: 'GET|HEAD /countries'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: true
                                    data: [{ id: 1, sortname: AF, name: Afghanistan, phonecode: 93 }, { id: 2, sortname: AL, name: Albania, phonecode: 355 }, { id: 3, sortname: DZ, name: Algeria, phonecode: 213 }, { id: 4, sortname: AS, name: 'American Samoa', phonecode: 1684 }, { id: 5, sortname: AD, name: Andorra, phonecode: 376 }, { id: 6, sortname: AO, name: Angola, phonecode: 244 }, { id: 7, sortname: AI, name: Anguilla, phonecode: 1264 }, { id: 8, sortname: AQ, name: Antarctica, phonecode: 0 }, { id: 9, sortname: AG, name: 'Antigua And Barbuda', phonecode: 1268 }, { id: 10, sortname: AR, name: Argentina, phonecode: 54 }, { id: 11, sortname: AM, name: Armenia, phonecode: 374 }, { id: 12, sortname: AW, name: Aruba, phonecode: 297 }, { id: 13, sortname: AU, name: Australia, phonecode: 61 }, { id: 14, sortname: AT, name: Austria, phonecode: 43 }, { id: 15, sortname: AZ, name: Azerbaijan, phonecode: 994 }, { id: 16, sortname: BS, name: 'Bahamas The', phonecode: 1242 }, { id: 17, sortname: BH, name: Bahrain, phonecode: 973 }, { id: 18, sortname: BD, name: Bangladesh, phonecode: 880 }, { id: 19, sortname: BB, name: Barbados, phonecode: 1246 }, { id: 20, sortname: BY, name: Belarus, phonecode: 375 }, { id: 21, sortname: BE, name: Belgium, phonecode: 32 }, { id: 22, sortname: BZ, name: Belize, phonecode: 501 }, { id: 23, sortname: BJ, name: Benin, phonecode: 229 }, { id: 24, sortname: BM, name: Bermuda, phonecode: 1441 }, { id: 25, sortname: BT, name: Bhutan, phonecode: 975 }, { id: 26, sortname: BO, name: Bolivia, phonecode: 591 }, { id: 27, sortname: BA, name: 'Bosnia and Herzegovina', phonecode: 387 }, { id: 28, sortname: BW, name: Botswana, phonecode: 267 }, { id: 29, sortname: BV, name: 'Bouvet Island', phonecode: 0 }, { id: 30, sortname: BR, name: Brazil, phonecode: 55 }, { id: 31, sortname: IO, name: 'British Indian Ocean Territory', phonecode: 246 }, { id: 32, sortname: BN, name: Brunei, phonecode: 673 }, { id: 33, sortname: BG, name: Bulgaria, phonecode: 359 }, { id: 34, sortname: BF, name: 'Burkina Faso', phonecode: 226 }, { id: 35, sortname: BI, name: Burundi, phonecode: 257 }, { id: 36, sortname: KH, name: Cambodia, phonecode: 855 }, { id: 37, sortname: CM, name: Cameroon, phonecode: 237 }, { id: 38, sortname: CA, name: Canada, phonecode: 1 }, { id: 39, sortname: CV, name: 'Cape Verde', phonecode: 238 }, { id: 40, sortname: KY, name: 'Cayman Islands', phonecode: 1345 }, { id: 41, sortname: CF, name: 'Central African Republic', phonecode: 236 }, { id: 42, sortname: TD, name: Chad, phonecode: 235 }, { id: 43, sortname: CL, name: Chile, phonecode: 56 }, { id: 44, sortname: CN, name: China, phonecode: 86 }, { id: 45, sortname: CX, name: 'Christmas Island', phonecode: 61 }, { id: 46, sortname: CC, name: 'Cocos (Keeling) Islands', phonecode: 672 }, { id: 47, sortname: CO, name: Colombia, phonecode: 57 }, { id: 48, sortname: KM, name: Comoros, phonecode: 269 }, { id: 49, sortname: CG, name: 'Republic Of The Congo', phonecode: 242 }, { id: 50, sortname: CD, name: 'Democratic Republic Of The Congo', phonecode: 242 }, { id: 51, sortname: CK, name: 'Cook Islands', phonecode: 682 }, { id: 52, sortname: CR, name: 'Costa Rica', phonecode: 506 }, { id: 53, sortname: CI, name: 'Cote D''Ivoire (Ivory Coast)', phonecode: 225 }, { id: 54, sortname: HR, name: 'Croatia (Hrvatska)', phonecode: 385 }, { id: 55, sortname: CU, name: Cuba, phonecode: 53 }, { id: 56, sortname: CY, name: Cyprus, phonecode: 357 }, { id: 57, sortname: CZ, name: 'Czech Republic', phonecode: 420 }, { id: 58, sortname: DK, name: Denmark, phonecode: 45 }, { id: 59, sortname: DJ, name: Djibouti, phonecode: 253 }, { id: 60, sortname: DM, name: Dominica, phonecode: 1767 }, { id: 61, sortname: DO, name: 'Dominican Republic', phonecode: 1809 }, { id: 62, sortname: TP, name: 'East Timor', phonecode: 670 }, { id: 63, sortname: EC, name: Ecuador, phonecode: 593 }, { id: 64, sortname: EG, name: Egypt, phonecode: 20 }, { id: 65, sortname: SV, name: 'El Salvador', phonecode: 503 }, { id: 66, sortname: GQ, name: 'Equatorial Guinea', phonecode: 240 }, { id: 67, sortname: ER, name: Eritrea, phonecode: 291 }, { id: 68, sortname: EE, name: Estonia, phonecode: 372 }, { id: 69, sortname: ET, name: Ethiopia, phonecode: 251 }, { id: 70, sortname: XA, name: 'External Territories of Australia', phonecode: 61 }, { id: 71, sortname: FK, name: 'Falkland Islands', phonecode: 500 }, { id: 72, sortname: FO, name: 'Faroe Islands', phonecode: 298 }, { id: 73, sortname: FJ, name: 'Fiji Islands', phonecode: 679 }, { id: 74, sortname: FI, name: Finland, phonecode: 358 }, { id: 75, sortname: FR, name: France, phonecode: 33 }, { id: 76, sortname: GF, name: 'French Guiana', phonecode: 594 }, { id: 77, sortname: PF, name: 'French Polynesia', phonecode: 689 }, { id: 78, sortname: TF, name: 'French Southern Territories', phonecode: 0 }, { id: 79, sortname: GA, name: Gabon, phonecode: 241 }, { id: 80, sortname: GM, name: 'Gambia The', phonecode: 220 }, { id: 81, sortname: GE, name: Georgia, phonecode: 995 }, { id: 82, sortname: DE, name: Germany, phonecode: 49 }, { id: 83, sortname: GH, name: Ghana, phonecode: 233 }, { id: 84, sortname: GI, name: Gibraltar, phonecode: 350 }, { id: 85, sortname: GR, name: Greece, phonecode: 30 }, { id: 86, sortname: GL, name: Greenland, phonecode: 299 }, { id: 87, sortname: GD, name: Grenada, phonecode: 1473 }, { id: 88, sortname: GP, name: Guadeloupe, phonecode: 590 }, { id: 89, sortname: GU, name: Guam, phonecode: 1671 }, { id: 90, sortname: GT, name: Guatemala, phonecode: 502 }, { id: 91, sortname: XU, name: 'Guernsey and Alderney', phonecode: 44 }, { id: 92, sortname: GN, name: Guinea, phonecode: 224 }, { id: 93, sortname: GW, name: Guinea-Bissau, phonecode: 245 }, { id: 94, sortname: GY, name: Guyana, phonecode: 592 }, { id: 95, sortname: HT, name: Haiti, phonecode: 509 }, { id: 96, sortname: HM, name: 'Heard and McDonald Islands', phonecode: 0 }, { id: 97, sortname: HN, name: Honduras, phonecode: 504 }, { id: 98, sortname: HK, name: 'Hong Kong S.A.R.', phonecode: 852 }, { id: 99, sortname: HU, name: Hungary, phonecode: 36 }, { id: 100, sortname: IS, name: Iceland, phonecode: 354 }, { id: 101, sortname: IN, name: India, phonecode: 91 }, { id: 102, sortname: ID, name: Indonesia, phonecode: 62 }, { id: 103, sortname: IR, name: Iran, phonecode: 98 }, { id: 104, sortname: IQ, name: Iraq, phonecode: 964 }, { id: 105, sortname: IE, name: Ireland, phonecode: 353 }, { id: 106, sortname: IL, name: Israel, phonecode: 972 }, { id: 107, sortname: IT, name: Italy, phonecode: 39 }, { id: 108, sortname: JM, name: Jamaica, phonecode: 1876 }, { id: 109, sortname: JP, name: Japan, phonecode: 81 }, { id: 110, sortname: XJ, name: Jersey, phonecode: 44 }, { id: 111, sortname: JO, name: Jordan, phonecode: 962 }, { id: 112, sortname: KZ, name: Kazakhstan, phonecode: 7 }, { id: 113, sortname: KE, name: Kenya, phonecode: 254 }, { id: 114, sortname: KI, name: Kiribati, phonecode: 686 }, { id: 115, sortname: KP, name: 'Korea North', phonecode: 850 }, { id: 116, sortname: KR, name: 'Korea South', phonecode: 82 }, { id: 117, sortname: KW, name: Kuwait, phonecode: 965 }, { id: 118, sortname: KG, name: Kyrgyzstan, phonecode: 996 }, { id: 119, sortname: LA, name: Laos, phonecode: 856 }, { id: 120, sortname: LV, name: Latvia, phonecode: 371 }, { id: 121, sortname: LB, name: Lebanon, phonecode: 961 }, { id: 122, sortname: LS, name: Lesotho, phonecode: 266 }, { id: 123, sortname: LR, name: Liberia, phonecode: 231 }, { id: 124, sortname: LY, name: Libya, phonecode: 218 }, { id: 125, sortname: LI, name: Liechtenstein, phonecode: 423 }, { id: 126, sortname: LT, name: Lithuania, phonecode: 370 }, { id: 127, sortname: LU, name: Luxembourg, phonecode: 352 }, { id: 128, sortname: MO, name: 'Macau S.A.R.', phonecode: 853 }, { id: 129, sortname: MK, name: Macedonia, phonecode: 389 }, { id: 130, sortname: MG, name: Madagascar, phonecode: 261 }, { id: 131, sortname: MW, name: Malawi, phonecode: 265 }, { id: 132, sortname: MY, name: Malaysia, phonecode: 60 }, { id: 133, sortname: MV, name: Maldives, phonecode: 960 }, { id: 134, sortname: ML, name: Mali, phonecode: 223 }, { id: 135, sortname: MT, name: Malta, phonecode: 356 }, { id: 136, sortname: XM, name: 'Man (Isle of)', phonecode: 44 }, { id: 137, sortname: MH, name: 'Marshall Islands', phonecode: 692 }, { id: 138, sortname: MQ, name: Martinique, phonecode: 596 }, { id: 139, sortname: MR, name: Mauritania, phonecode: 222 }, { id: 140, sortname: MU, name: Mauritius, phonecode: 230 }, { id: 141, sortname: YT, name: Mayotte, phonecode: 269 }, { id: 142, sortname: MX, name: Mexico, phonecode: 52 }, { id: 143, sortname: FM, name: Micronesia, phonecode: 691 }, { id: 144, sortname: MD, name: Moldova, phonecode: 373 }, { id: 145, sortname: MC, name: Monaco, phonecode: 377 }, { id: 146, sortname: MN, name: Mongolia, phonecode: 976 }, { id: 147, sortname: MS, name: Montserrat, phonecode: 1664 }, { id: 148, sortname: MA, name: Morocco, phonecode: 212 }, { id: 149, sortname: MZ, name: Mozambique, phonecode: 258 }, { id: 150, sortname: MM, name: Myanmar, phonecode: 95 }, { id: 151, sortname: NA, name: Namibia, phonecode: 264 }, { id: 152, sortname: NR, name: Nauru, phonecode: 674 }, { id: 153, sortname: NP, name: Nepal, phonecode: 977 }, { id: 154, sortname: AN, name: 'Netherlands Antilles', phonecode: 599 }, { id: 155, sortname: NL, name: 'Netherlands The', phonecode: 31 }, { id: 156, sortname: NC, name: 'New Caledonia', phonecode: 687 }, { id: 157, sortname: NZ, name: 'New Zealand', phonecode: 64 }, { id: 158, sortname: NI, name: Nicaragua, phonecode: 505 }, { id: 159, sortname: NE, name: Niger, phonecode: 227 }, { id: 160, sortname: NG, name: Nigeria, phonecode: 234 }, { id: 161, sortname: NU, name: Niue, phonecode: 683 }, { id: 162, sortname: NF, name: 'Norfolk Island', phonecode: 672 }, { id: 163, sortname: MP, name: 'Northern Mariana Islands', phonecode: 1670 }, { id: 164, sortname: 'NO', name: Norway, phonecode: 47 }, { id: 165, sortname: OM, name: Oman, phonecode: 968 }, { id: 166, sortname: PK, name: Pakistan, phonecode: 92 }, { id: 167, sortname: PW, name: Palau, phonecode: 680 }, { id: 168, sortname: PS, name: 'Palestinian Territory Occupied', phonecode: 970 }, { id: 169, sortname: PA, name: Panama, phonecode: 507 }, { id: 170, sortname: PG, name: 'Papua new Guinea', phonecode: 675 }, { id: 171, sortname: PY, name: Paraguay, phonecode: 595 }, { id: 172, sortname: PE, name: Peru, phonecode: 51 }, { id: 173, sortname: PH, name: Philippines, phonecode: 63 }, { id: 174, sortname: PN, name: 'Pitcairn Island', phonecode: 0 }, { id: 175, sortname: PL, name: Poland, phonecode: 48 }, { id: 176, sortname: PT, name: Portugal, phonecode: 351 }, { id: 177, sortname: PR, name: 'Puerto Rico', phonecode: 1787 }, { id: 178, sortname: QA, name: Qatar, phonecode: 974 }, { id: 179, sortname: RE, name: Reunion, phonecode: 262 }, { id: 180, sortname: RO, name: Romania, phonecode: 40 }, { id: 181, sortname: RU, name: Russia, phonecode: 70 }, { id: 182, sortname: RW, name: Rwanda, phonecode: 250 }, { id: 183, sortname: SH, name: 'Saint Helena', phonecode: 290 }, { id: 184, sortname: KN, name: 'Saint Kitts And Nevis', phonecode: 1869 }, { id: 185, sortname: LC, name: 'Saint Lucia', phonecode: 1758 }, { id: 186, sortname: PM, name: 'Saint Pierre and Miquelon', phonecode: 508 }, { id: 187, sortname: VC, name: 'Saint Vincent And The Grenadines', phonecode: 1784 }, { id: 188, sortname: WS, name: Samoa, phonecode: 684 }, { id: 189, sortname: SM, name: 'San Marino', phonecode: 378 }, { id: 190, sortname: ST, name: 'Sao Tome and Principe', phonecode: 239 }, { id: 191, sortname: SA, name: 'Saudi Arabia', phonecode: 966 }, { id: 192, sortname: SN, name: Senegal, phonecode: 221 }, { id: 193, sortname: RS, name: Serbia, phonecode: 381 }, { id: 194, sortname: SC, name: Seychelles, phonecode: 248 }, { id: 195, sortname: SL, name: 'Sierra Leone', phonecode: 232 }, { id: 196, sortname: SG, name: Singapore, phonecode: 65 }, { id: 197, sortname: SK, name: Slovakia, phonecode: 421 }, { id: 198, sortname: SI, name: Slovenia, phonecode: 386 }, { id: 199, sortname: XG, name: 'Smaller Territories of the UK', phonecode: 44 }, { id: 200, sortname: SB, name: 'Solomon Islands', phonecode: 677 }, { id: 201, sortname: SO, name: Somalia, phonecode: 252 }, { id: 202, sortname: ZA, name: 'South Africa', phonecode: 27 }, { id: 203, sortname: GS, name: 'South Georgia', phonecode: 0 }, { id: 204, sortname: SS, name: 'South Sudan', phonecode: 211 }, { id: 205, sortname: ES, name: Spain, phonecode: 34 }, { id: 206, sortname: LK, name: 'Sri Lanka', phonecode: 94 }, { id: 207, sortname: SD, name: Sudan, phonecode: 249 }, { id: 208, sortname: SR, name: Suriname, phonecode: 597 }, { id: 209, sortname: SJ, name: 'Svalbard And Jan Mayen Islands', phonecode: 47 }, { id: 210, sortname: SZ, name: Swaziland, phonecode: 268 }, { id: 211, sortname: SE, name: Sweden, phonecode: 46 }, { id: 212, sortname: CH, name: Switzerland, phonecode: 41 }, { id: 213, sortname: SY, name: Syria, phonecode: 963 }, { id: 214, sortname: TW, name: Taiwan, phonecode: 886 }, { id: 215, sortname: TJ, name: Tajikistan, phonecode: 992 }, { id: 216, sortname: TZ, name: Tanzania, phonecode: 255 }, { id: 217, sortname: TH, name: Thailand, phonecode: 66 }, { id: 218, sortname: TG, name: Togo, phonecode: 228 }, { id: 219, sortname: TK, name: Tokelau, phonecode: 690 }, { id: 220, sortname: TO, name: Tonga, phonecode: 676 }, { id: 221, sortname: TT, name: 'Trinidad And Tobago', phonecode: 1868 }, { id: 222, sortname: TN, name: Tunisia, phonecode: 216 }, { id: 223, sortname: TR, name: Turkey, phonecode: 90 }, { id: 224, sortname: TM, name: Turkmenistan, phonecode: 7370 }, { id: 225, sortname: TC, name: 'Turks And Caicos Islands', phonecode: 1649 }, { id: 226, sortname: TV, name: Tuvalu, phonecode: 688 }, { id: 227, sortname: UG, name: Uganda, phonecode: 256 }, { id: 228, sortname: UA, name: Ukraine, phonecode: 380 }, { id: 229, sortname: AE, name: 'United Arab Emirates', phonecode: 971 }, { id: 230, sortname: GB, name: 'United Kingdom', phonecode: 44 }, { id: 231, sortname: US, name: 'United States', phonecode: 1 }, { id: 232, sortname: UM, name: 'United States Minor Outlying Islands', phonecode: 1 }, { id: 233, sortname: UY, name: Uruguay, phonecode: 598 }, { id: 234, sortname: UZ, name: Uzbekistan, phonecode: 998 }, { id: 235, sortname: VU, name: Vanuatu, phonecode: 678 }, { id: 236, sortname: VA, name: 'Vatican City State (Holy See)', phonecode: 39 }, { id: 237, sortname: VE, name: Venezuela, phonecode: 58 }, { id: 238, sortname: VN, name: Vietnam, phonecode: 84 }, { id: 239, sortname: VG, name: 'Virgin Islands (British)', phonecode: 1284 }, { id: 240, sortname: VI, name: 'Virgin Islands (US)', phonecode: 1340 }, { id: 241, sortname: WF, name: 'Wallis And Futuna Islands', phonecode: 681 }, { id: 242, sortname: EH, name: 'Western Sahara', phonecode: 212 }, { id: 243, sortname: YE, name: Yemen, phonecode: 967 }, { id: 244, sortname: YU, name: Yugoslavia, phonecode: 38 }, { id: 245, sortname: ZM, name: Zambia, phonecode: 260 }, { id: 246, sortname: ZW, name: Zimbabwe, phonecode: 263 }]
                                    message: 'Countries retrieved successfully'
                                properties:
                                    success: { type: boolean, example: true }
                                    data: { type: array, example: [{ id: 1, sortname: AF, name: Afghanistan, phonecode: 93 }, { id: 2, sortname: AL, name: Albania, phonecode: 355 }, { id: 3, sortname: DZ, name: Algeria, phonecode: 213 }, { id: 4, sortname: AS, name: 'American Samoa', phonecode: 1684 }, { id: 5, sortname: AD, name: Andorra, phonecode: 376 }, { id: 6, sortname: AO, name: Angola, phonecode: 244 }, { id: 7, sortname: AI, name: Anguilla, phonecode: 1264 }, { id: 8, sortname: AQ, name: Antarctica, phonecode: 0 }, { id: 9, sortname: AG, name: 'Antigua And Barbuda', phonecode: 1268 }, { id: 10, sortname: AR, name: Argentina, phonecode: 54 }, { id: 11, sortname: AM, name: Armenia, phonecode: 374 }, { id: 12, sortname: AW, name: Aruba, phonecode: 297 }, { id: 13, sortname: AU, name: Australia, phonecode: 61 }, { id: 14, sortname: AT, name: Austria, phonecode: 43 }, { id: 15, sortname: AZ, name: Azerbaijan, phonecode: 994 }, { id: 16, sortname: BS, name: 'Bahamas The', phonecode: 1242 }, { id: 17, sortname: BH, name: Bahrain, phonecode: 973 }, { id: 18, sortname: BD, name: Bangladesh, phonecode: 880 }, { id: 19, sortname: BB, name: Barbados, phonecode: 1246 }, { id: 20, sortname: BY, name: Belarus, phonecode: 375 }, { id: 21, sortname: BE, name: Belgium, phonecode: 32 }, { id: 22, sortname: BZ, name: Belize, phonecode: 501 }, { id: 23, sortname: BJ, name: Benin, phonecode: 229 }, { id: 24, sortname: BM, name: Bermuda, phonecode: 1441 }, { id: 25, sortname: BT, name: Bhutan, phonecode: 975 }, { id: 26, sortname: BO, name: Bolivia, phonecode: 591 }, { id: 27, sortname: BA, name: 'Bosnia and Herzegovina', phonecode: 387 }, { id: 28, sortname: BW, name: Botswana, phonecode: 267 }, { id: 29, sortname: BV, name: 'Bouvet Island', phonecode: 0 }, { id: 30, sortname: BR, name: Brazil, phonecode: 55 }, { id: 31, sortname: IO, name: 'British Indian Ocean Territory', phonecode: 246 }, { id: 32, sortname: BN, name: Brunei, phonecode: 673 }, { id: 33, sortname: BG, name: Bulgaria, phonecode: 359 }, { id: 34, sortname: BF, name: 'Burkina Faso', phonecode: 226 }, { id: 35, sortname: BI, name: Burundi, phonecode: 257 }, { id: 36, sortname: KH, name: Cambodia, phonecode: 855 }, { id: 37, sortname: CM, name: Cameroon, phonecode: 237 }, { id: 38, sortname: CA, name: Canada, phonecode: 1 }, { id: 39, sortname: CV, name: 'Cape Verde', phonecode: 238 }, { id: 40, sortname: KY, name: 'Cayman Islands', phonecode: 1345 }, { id: 41, sortname: CF, name: 'Central African Republic', phonecode: 236 }, { id: 42, sortname: TD, name: Chad, phonecode: 235 }, { id: 43, sortname: CL, name: Chile, phonecode: 56 }, { id: 44, sortname: CN, name: China, phonecode: 86 }, { id: 45, sortname: CX, name: 'Christmas Island', phonecode: 61 }, { id: 46, sortname: CC, name: 'Cocos (Keeling) Islands', phonecode: 672 }, { id: 47, sortname: CO, name: Colombia, phonecode: 57 }, { id: 48, sortname: KM, name: Comoros, phonecode: 269 }, { id: 49, sortname: CG, name: 'Republic Of The Congo', phonecode: 242 }, { id: 50, sortname: CD, name: 'Democratic Republic Of The Congo', phonecode: 242 }, { id: 51, sortname: CK, name: 'Cook Islands', phonecode: 682 }, { id: 52, sortname: CR, name: 'Costa Rica', phonecode: 506 }, { id: 53, sortname: CI, name: 'Cote D''Ivoire (Ivory Coast)', phonecode: 225 }, { id: 54, sortname: HR, name: 'Croatia (Hrvatska)', phonecode: 385 }, { id: 55, sortname: CU, name: Cuba, phonecode: 53 }, { id: 56, sortname: CY, name: Cyprus, phonecode: 357 }, { id: 57, sortname: CZ, name: 'Czech Republic', phonecode: 420 }, { id: 58, sortname: DK, name: Denmark, phonecode: 45 }, { id: 59, sortname: DJ, name: Djibouti, phonecode: 253 }, { id: 60, sortname: DM, name: Dominica, phonecode: 1767 }, { id: 61, sortname: DO, name: 'Dominican Republic', phonecode: 1809 }, { id: 62, sortname: TP, name: 'East Timor', phonecode: 670 }, { id: 63, sortname: EC, name: Ecuador, phonecode: 593 }, { id: 64, sortname: EG, name: Egypt, phonecode: 20 }, { id: 65, sortname: SV, name: 'El Salvador', phonecode: 503 }, { id: 66, sortname: GQ, name: 'Equatorial Guinea', phonecode: 240 }, { id: 67, sortname: ER, name: Eritrea, phonecode: 291 }, { id: 68, sortname: EE, name: Estonia, phonecode: 372 }, { id: 69, sortname: ET, name: Ethiopia, phonecode: 251 }, { id: 70, sortname: XA, name: 'External Territories of Australia', phonecode: 61 }, { id: 71, sortname: FK, name: 'Falkland Islands', phonecode: 500 }, { id: 72, sortname: FO, name: 'Faroe Islands', phonecode: 298 }, { id: 73, sortname: FJ, name: 'Fiji Islands', phonecode: 679 }, { id: 74, sortname: FI, name: Finland, phonecode: 358 }, { id: 75, sortname: FR, name: France, phonecode: 33 }, { id: 76, sortname: GF, name: 'French Guiana', phonecode: 594 }, { id: 77, sortname: PF, name: 'French Polynesia', phonecode: 689 }, { id: 78, sortname: TF, name: 'French Southern Territories', phonecode: 0 }, { id: 79, sortname: GA, name: Gabon, phonecode: 241 }, { id: 80, sortname: GM, name: 'Gambia The', phonecode: 220 }, { id: 81, sortname: GE, name: Georgia, phonecode: 995 }, { id: 82, sortname: DE, name: Germany, phonecode: 49 }, { id: 83, sortname: GH, name: Ghana, phonecode: 233 }, { id: 84, sortname: GI, name: Gibraltar, phonecode: 350 }, { id: 85, sortname: GR, name: Greece, phonecode: 30 }, { id: 86, sortname: GL, name: Greenland, phonecode: 299 }, { id: 87, sortname: GD, name: Grenada, phonecode: 1473 }, { id: 88, sortname: GP, name: Guadeloupe, phonecode: 590 }, { id: 89, sortname: GU, name: Guam, phonecode: 1671 }, { id: 90, sortname: GT, name: Guatemala, phonecode: 502 }, { id: 91, sortname: XU, name: 'Guernsey and Alderney', phonecode: 44 }, { id: 92, sortname: GN, name: Guinea, phonecode: 224 }, { id: 93, sortname: GW, name: Guinea-Bissau, phonecode: 245 }, { id: 94, sortname: GY, name: Guyana, phonecode: 592 }, { id: 95, sortname: HT, name: Haiti, phonecode: 509 }, { id: 96, sortname: HM, name: 'Heard and McDonald Islands', phonecode: 0 }, { id: 97, sortname: HN, name: Honduras, phonecode: 504 }, { id: 98, sortname: HK, name: 'Hong Kong S.A.R.', phonecode: 852 }, { id: 99, sortname: HU, name: Hungary, phonecode: 36 }, { id: 100, sortname: IS, name: Iceland, phonecode: 354 }, { id: 101, sortname: IN, name: India, phonecode: 91 }, { id: 102, sortname: ID, name: Indonesia, phonecode: 62 }, { id: 103, sortname: IR, name: Iran, phonecode: 98 }, { id: 104, sortname: IQ, name: Iraq, phonecode: 964 }, { id: 105, sortname: IE, name: Ireland, phonecode: 353 }, { id: 106, sortname: IL, name: Israel, phonecode: 972 }, { id: 107, sortname: IT, name: Italy, phonecode: 39 }, { id: 108, sortname: JM, name: Jamaica, phonecode: 1876 }, { id: 109, sortname: JP, name: Japan, phonecode: 81 }, { id: 110, sortname: XJ, name: Jersey, phonecode: 44 }, { id: 111, sortname: JO, name: Jordan, phonecode: 962 }, { id: 112, sortname: KZ, name: Kazakhstan, phonecode: 7 }, { id: 113, sortname: KE, name: Kenya, phonecode: 254 }, { id: 114, sortname: KI, name: Kiribati, phonecode: 686 }, { id: 115, sortname: KP, name: 'Korea North', phonecode: 850 }, { id: 116, sortname: KR, name: 'Korea South', phonecode: 82 }, { id: 117, sortname: KW, name: Kuwait, phonecode: 965 }, { id: 118, sortname: KG, name: Kyrgyzstan, phonecode: 996 }, { id: 119, sortname: LA, name: Laos, phonecode: 856 }, { id: 120, sortname: LV, name: Latvia, phonecode: 371 }, { id: 121, sortname: LB, name: Lebanon, phonecode: 961 }, { id: 122, sortname: LS, name: Lesotho, phonecode: 266 }, { id: 123, sortname: LR, name: Liberia, phonecode: 231 }, { id: 124, sortname: LY, name: Libya, phonecode: 218 }, { id: 125, sortname: LI, name: Liechtenstein, phonecode: 423 }, { id: 126, sortname: LT, name: Lithuania, phonecode: 370 }, { id: 127, sortname: LU, name: Luxembourg, phonecode: 352 }, { id: 128, sortname: MO, name: 'Macau S.A.R.', phonecode: 853 }, { id: 129, sortname: MK, name: Macedonia, phonecode: 389 }, { id: 130, sortname: MG, name: Madagascar, phonecode: 261 }, { id: 131, sortname: MW, name: Malawi, phonecode: 265 }, { id: 132, sortname: MY, name: Malaysia, phonecode: 60 }, { id: 133, sortname: MV, name: Maldives, phonecode: 960 }, { id: 134, sortname: ML, name: Mali, phonecode: 223 }, { id: 135, sortname: MT, name: Malta, phonecode: 356 }, { id: 136, sortname: XM, name: 'Man (Isle of)', phonecode: 44 }, { id: 137, sortname: MH, name: 'Marshall Islands', phonecode: 692 }, { id: 138, sortname: MQ, name: Martinique, phonecode: 596 }, { id: 139, sortname: MR, name: Mauritania, phonecode: 222 }, { id: 140, sortname: MU, name: Mauritius, phonecode: 230 }, { id: 141, sortname: YT, name: Mayotte, phonecode: 269 }, { id: 142, sortname: MX, name: Mexico, phonecode: 52 }, { id: 143, sortname: FM, name: Micronesia, phonecode: 691 }, { id: 144, sortname: MD, name: Moldova, phonecode: 373 }, { id: 145, sortname: MC, name: Monaco, phonecode: 377 }, { id: 146, sortname: MN, name: Mongolia, phonecode: 976 }, { id: 147, sortname: MS, name: Montserrat, phonecode: 1664 }, { id: 148, sortname: MA, name: Morocco, phonecode: 212 }, { id: 149, sortname: MZ, name: Mozambique, phonecode: 258 }, { id: 150, sortname: MM, name: Myanmar, phonecode: 95 }, { id: 151, sortname: NA, name: Namibia, phonecode: 264 }, { id: 152, sortname: NR, name: Nauru, phonecode: 674 }, { id: 153, sortname: NP, name: Nepal, phonecode: 977 }, { id: 154, sortname: AN, name: 'Netherlands Antilles', phonecode: 599 }, { id: 155, sortname: NL, name: 'Netherlands The', phonecode: 31 }, { id: 156, sortname: NC, name: 'New Caledonia', phonecode: 687 }, { id: 157, sortname: NZ, name: 'New Zealand', phonecode: 64 }, { id: 158, sortname: NI, name: Nicaragua, phonecode: 505 }, { id: 159, sortname: NE, name: Niger, phonecode: 227 }, { id: 160, sortname: NG, name: Nigeria, phonecode: 234 }, { id: 161, sortname: NU, name: Niue, phonecode: 683 }, { id: 162, sortname: NF, name: 'Norfolk Island', phonecode: 672 }, { id: 163, sortname: MP, name: 'Northern Mariana Islands', phonecode: 1670 }, { id: 164, sortname: 'NO', name: Norway, phonecode: 47 }, { id: 165, sortname: OM, name: Oman, phonecode: 968 }, { id: 166, sortname: PK, name: Pakistan, phonecode: 92 }, { id: 167, sortname: PW, name: Palau, phonecode: 680 }, { id: 168, sortname: PS, name: 'Palestinian Territory Occupied', phonecode: 970 }, { id: 169, sortname: PA, name: Panama, phonecode: 507 }, { id: 170, sortname: PG, name: 'Papua new Guinea', phonecode: 675 }, { id: 171, sortname: PY, name: Paraguay, phonecode: 595 }, { id: 172, sortname: PE, name: Peru, phonecode: 51 }, { id: 173, sortname: PH, name: Philippines, phonecode: 63 }, { id: 174, sortname: PN, name: 'Pitcairn Island', phonecode: 0 }, { id: 175, sortname: PL, name: Poland, phonecode: 48 }, { id: 176, sortname: PT, name: Portugal, phonecode: 351 }, { id: 177, sortname: PR, name: 'Puerto Rico', phonecode: 1787 }, { id: 178, sortname: QA, name: Qatar, phonecode: 974 }, { id: 179, sortname: RE, name: Reunion, phonecode: 262 }, { id: 180, sortname: RO, name: Romania, phonecode: 40 }, { id: 181, sortname: RU, name: Russia, phonecode: 70 }, { id: 182, sortname: RW, name: Rwanda, phonecode: 250 }, { id: 183, sortname: SH, name: 'Saint Helena', phonecode: 290 }, { id: 184, sortname: KN, name: 'Saint Kitts And Nevis', phonecode: 1869 }, { id: 185, sortname: LC, name: 'Saint Lucia', phonecode: 1758 }, { id: 186, sortname: PM, name: 'Saint Pierre and Miquelon', phonecode: 508 }, { id: 187, sortname: VC, name: 'Saint Vincent And The Grenadines', phonecode: 1784 }, { id: 188, sortname: WS, name: Samoa, phonecode: 684 }, { id: 189, sortname: SM, name: 'San Marino', phonecode: 378 }, { id: 190, sortname: ST, name: 'Sao Tome and Principe', phonecode: 239 }, { id: 191, sortname: SA, name: 'Saudi Arabia', phonecode: 966 }, { id: 192, sortname: SN, name: Senegal, phonecode: 221 }, { id: 193, sortname: RS, name: Serbia, phonecode: 381 }, { id: 194, sortname: SC, name: Seychelles, phonecode: 248 }, { id: 195, sortname: SL, name: 'Sierra Leone', phonecode: 232 }, { id: 196, sortname: SG, name: Singapore, phonecode: 65 }, { id: 197, sortname: SK, name: Slovakia, phonecode: 421 }, { id: 198, sortname: SI, name: Slovenia, phonecode: 386 }, { id: 199, sortname: XG, name: 'Smaller Territories of the UK', phonecode: 44 }, { id: 200, sortname: SB, name: 'Solomon Islands', phonecode: 677 }, { id: 201, sortname: SO, name: Somalia, phonecode: 252 }, { id: 202, sortname: ZA, name: 'South Africa', phonecode: 27 }, { id: 203, sortname: GS, name: 'South Georgia', phonecode: 0 }, { id: 204, sortname: SS, name: 'South Sudan', phonecode: 211 }, { id: 205, sortname: ES, name: Spain, phonecode: 34 }, { id: 206, sortname: LK, name: 'Sri Lanka', phonecode: 94 }, { id: 207, sortname: SD, name: Sudan, phonecode: 249 }, { id: 208, sortname: SR, name: Suriname, phonecode: 597 }, { id: 209, sortname: SJ, name: 'Svalbard And Jan Mayen Islands', phonecode: 47 }, { id: 210, sortname: SZ, name: Swaziland, phonecode: 268 }, { id: 211, sortname: SE, name: Sweden, phonecode: 46 }, { id: 212, sortname: CH, name: Switzerland, phonecode: 41 }, { id: 213, sortname: SY, name: Syria, phonecode: 963 }, { id: 214, sortname: TW, name: Taiwan, phonecode: 886 }, { id: 215, sortname: TJ, name: Tajikistan, phonecode: 992 }, { id: 216, sortname: TZ, name: Tanzania, phonecode: 255 }, { id: 217, sortname: TH, name: Thailand, phonecode: 66 }, { id: 218, sortname: TG, name: Togo, phonecode: 228 }, { id: 219, sortname: TK, name: Tokelau, phonecode: 690 }, { id: 220, sortname: TO, name: Tonga, phonecode: 676 }, { id: 221, sortname: TT, name: 'Trinidad And Tobago', phonecode: 1868 }, { id: 222, sortname: TN, name: Tunisia, phonecode: 216 }, { id: 223, sortname: TR, name: Turkey, phonecode: 90 }, { id: 224, sortname: TM, name: Turkmenistan, phonecode: 7370 }, { id: 225, sortname: TC, name: 'Turks And Caicos Islands', phonecode: 1649 }, { id: 226, sortname: TV, name: Tuvalu, phonecode: 688 }, { id: 227, sortname: UG, name: Uganda, phonecode: 256 }, { id: 228, sortname: UA, name: Ukraine, phonecode: 380 }, { id: 229, sortname: AE, name: 'United Arab Emirates', phonecode: 971 }, { id: 230, sortname: GB, name: 'United Kingdom', phonecode: 44 }, { id: 231, sortname: US, name: 'United States', phonecode: 1 }, { id: 232, sortname: UM, name: 'United States Minor Outlying Islands', phonecode: 1 }, { id: 233, sortname: UY, name: Uruguay, phonecode: 598 }, { id: 234, sortname: UZ, name: Uzbekistan, phonecode: 998 }, { id: 235, sortname: VU, name: Vanuatu, phonecode: 678 }, { id: 236, sortname: VA, name: 'Vatican City State (Holy See)', phonecode: 39 }, { id: 237, sortname: VE, name: Venezuela, phonecode: 58 }, { id: 238, sortname: VN, name: Vietnam, phonecode: 84 }, { id: 239, sortname: VG, name: 'Virgin Islands (British)', phonecode: 1284 }, { id: 240, sortname: VI, name: 'Virgin Islands (US)', phonecode: 1340 }, { id: 241, sortname: WF, name: 'Wallis And Futuna Islands', phonecode: 681 }, { id: 242, sortname: EH, name: 'Western Sahara', phonecode: 212 }, { id: 243, sortname: YE, name: Yemen, phonecode: 967 }, { id: 244, sortname: YU, name: Yugoslavia, phonecode: 38 }, { id: 245, sortname: ZM, name: Zambia, phonecode: 260 }, { id: 246, sortname: ZW, name: Zimbabwe, phonecode: 263 }], items: { type: object } }
                                    message: { type: string, example: 'Countries retrieved successfully' }
            tags:
                - Country
            security: []
        post:
            summary: 'Store a newly created Country in storage.'
            description: 'POST /countries'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Country
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                sortname:
                                    type: string
                                    description: ''
                                    example: distinctio
                                name:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                phonecode:
                                    type: integer
                                    description: ''
                                    example: 11
                            required:
                                - sortname
                                - name
                                - phonecode
            security: []
    '/api/countries/{country}':
        get:
            summary: 'Display the specified Country.'
            description: 'GET|HEAD /countries/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: false
                                    message: 'Country not found'
                                properties:
                                    success: { type: boolean, example: false }
                                    message: { type: string, example: 'Country not found' }
            tags:
                - Country
            security: []
        put:
            summary: 'Update the specified Country in storage.'
            description: 'PUT/PATCH /countries/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Country
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                sortname:
                                    type: string
                                    description: ''
                                    example: ut
                                name:
                                    type: string
                                    description: ''
                                    example: rem
                                phonecode:
                                    type: integer
                                    description: ''
                                    example: 8
                            required:
                                - sortname
                                - name
                                - phonecode
            security: []
        delete:
            summary: 'Remove the specified Country from storage.'
            description: 'DELETE /countries/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Country
            security: []
        parameters:
            -
                in: path
                name: country
                description: ''
                example: velit
                required: true
                schema:
                    type: string
    /oauth/authorize:
        get:
            summary: 'Authorize a client to access the user''s account.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Approve the authorization request.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        delete:
            summary: 'Deny the authorization request.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/token:
        post:
            summary: 'Authorize a client to access the user''s account.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/tokens:
        get:
            summary: 'Get all of the authorized tokens for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    '/oauth/tokens/{token_id}':
        delete:
            summary: 'Delete the given token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token_id
                description: ''
                example: aspernatur
                required: true
                schema:
                    type: string
    /oauth/token/refresh:
        post:
            summary: 'Get a fresh transient token cookie for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/clients:
        get:
            summary: 'Get all of the clients for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Store a new client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/oauth/clients/{client_id}':
        put:
            summary: 'Update the given client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        delete:
            summary: 'Delete the given client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: client_id
                description: ''
                example: illum
                required: true
                schema:
                    type: string
    /oauth/scopes:
        get:
            summary: 'Get all of the available scopes for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /oauth/personal-access-tokens:
        get:
            summary: 'Get all of the personal access tokens for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Create a new personal access token for the user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/oauth/personal-access-tokens/{token_id}':
        delete:
            summary: 'Delete the given token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token_id
                description: ''
                example: dolores
                required: true
                schema:
                    type: string
    /api/fitness_coaches/register:
        post:
            summary: 'Store a newly created FitnessCoach in storage.'
            description: 'POST /fitnessCoaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Fitness Coach'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: ab
                                first_name:
                                    type: string
                                    description: ''
                                    example: quia
                                middle_name:
                                    type: string
                                    description: ''
                                    example: sed
                                last_name:
                                    type: string
                                    description: ''
                                    example: qui
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: temporibus
                                language:
                                    type: string
                                    description: ''
                                    example: nemo
                                nationality:
                                    type: string
                                    description: ''
                                    example: eum
                                city_id:
                                    type: string
                                    description: ''
                                    example: numquam
                                email:
                                    type: string
                                    description: ''
                                    example: corporis
                                employment_type:
                                    type: string
                                    description: ''
                                    example: quisquam
                                qualifications:
                                    type: string
                                    description: ''
                                    example: ad
                            required:
                                - password
            security: []
    /api/fitness_coaches/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Fitness Coach'
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/fitness_coaches/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Fitness Coach'
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/fitness_coaches:
        get:
            summary: 'Display a listing of the FitnessCoach.'
            description: 'GET|HEAD /fitnessCoaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Fitness Coach'
            security: []
        post:
            summary: 'Store a newly created FitnessCoach in storage.'
            description: 'POST /fitnessCoaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Fitness Coach'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: officia
                                first_name:
                                    type: string
                                    description: ''
                                    example: et
                                middle_name:
                                    type: string
                                    description: ''
                                    example: commodi
                                last_name:
                                    type: string
                                    description: ''
                                    example: rerum
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: et
                                language:
                                    type: string
                                    description: ''
                                    example: est
                                nationality:
                                    type: string
                                    description: ''
                                    example: rem
                                city_id:
                                    type: string
                                    description: ''
                                    example: qui
                                email:
                                    type: string
                                    description: ''
                                    example: temporibus
                                employment_type:
                                    type: string
                                    description: ''
                                    example: laudantium
                                qualifications:
                                    type: string
                                    description: ''
                                    example: ut
                            required:
                                - password
            security: []
    '/api/fitness_coaches/{fitness_coach}':
        get:
            summary: 'Display the specified FitnessCoach.'
            description: 'GET|HEAD /fitnessCoaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Fitness Coach'
            security: []
        put:
            summary: 'Update the specified FitnessCoach in storage.'
            description: 'PUT/PATCH /fitnessCoaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Fitness Coach'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: iure
                                first_name:
                                    type: string
                                    description: ''
                                    example: quis
                                middle_name:
                                    type: string
                                    description: ''
                                    example: ut
                                last_name:
                                    type: string
                                    description: ''
                                    example: repellendus
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: qui
                                language:
                                    type: string
                                    description: ''
                                    example: totam
                                nationality:
                                    type: string
                                    description: ''
                                    example: libero
                                city_id:
                                    type: string
                                    description: ''
                                    example: eveniet
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                email:
                                    type: string
                                    description: ''
                                    example: et
                                employment_type:
                                    type: string
                                    description: ''
                                    example: dolor
                                qualifications:
                                    type: string
                                    description: ''
                                    example: excepturi
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified FitnessCoach from storage.'
            description: 'DELETE /fitnessCoaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Fitness Coach'
            security: []
        parameters:
            -
                in: path
                name: fitness_coach
                description: ''
                example: rem
                required: true
                schema:
                    type: string
    /api/health_predictors:
        get:
            summary: 'Display a listing of the HealthPredictor.'
            description: 'GET|HEAD /healthPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Health Predictor'
            security: []
        post:
            summary: 'Store a newly created HealthPredictor in storage.'
            description: 'POST /healthPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Health Predictor'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                blood_group:
                                    type: string
                                    description: ''
                                    example: quia
                                is_hereditary_issue:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_current_health_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_receiving_treatment:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_long_term_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                hereditary_issue:
                                    type: string
                                    description: ''
                                    example: similique
                                long_term_injury:
                                    type: string
                                    description: ''
                                    example: vitae
                                treatment_type:
                                    type: string
                                    description: ''
                                    example: aspernatur
                                current_health_injury:
                                    type: string
                                    description: ''
                                    example: minima
                                is_personal_health_challenge:
                                    type: boolean
                                    description: ''
                                    example: false
                                personal_health_challenge:
                                    type: string
                                    description: ''
                                    example: rerum
                                injury_seriousness:
                                    type: string
                                    description: ''
                                    example: et
                                medical_treatment:
                                    type: string
                                    description: ''
                                    example: aut
                                injury_location:
                                    type: string
                                    description: ''
                                    example: optio
                                genotype:
                                    type: string
                                    description: ''
                                    example: perferendis
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
    '/api/health_predictors/{health_predictor}':
        get:
            summary: 'Display the specified HealthPredictor.'
            description: 'GET|HEAD /healthPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Health Predictor'
            security: []
        put:
            summary: 'Update the specified HealthPredictor in storage.'
            description: 'PUT/PATCH /healthPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Health Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 12
                                blood_group:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                                is_hereditary_issue:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_current_health_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_receiving_treatment:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_long_term_injury:
                                    type: boolean
                                    description: ''
                                    example: false
                                hereditary_issue:
                                    type: string
                                    description: ''
                                    example: assumenda
                                long_term_injury:
                                    type: string
                                    description: ''
                                    example: distinctio
                                treatment_type:
                                    type: string
                                    description: ''
                                    example: natus
                                current_health_injury:
                                    type: string
                                    description: ''
                                    example: repellendus
                                is_personal_health_challenge:
                                    type: boolean
                                    description: ''
                                    example: false
                                personal_health_challenge:
                                    type: string
                                    description: ''
                                    example: enim
                                injury_seriousness:
                                    type: string
                                    description: ''
                                    example: itaque
                                medical_treatment:
                                    type: string
                                    description: ''
                                    example: dolore
                                injury_location:
                                    type: string
                                    description: ''
                                    example: quos
                                genotype:
                                    type: string
                                    description: ''
                                    example: dignissimos
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified HealthPredictor from storage.'
            description: 'DELETE /healthPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Health Predictor'
            security: []
        parameters:
            -
                in: path
                name: health_predictor
                description: ''
                example: atque
                required: true
                schema:
                    type: string
    /api/nuritionists/register:
        post:
            summary: 'Store a newly created Nuritionist in storage.'
            description: 'POST /nuritionists'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Nuritionist
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: quis
                                first_name:
                                    type: string
                                    description: ''
                                    example: ratione
                                middle_name:
                                    type: string
                                    description: ''
                                    example: sed
                                last_name:
                                    type: string
                                    description: ''
                                    example: et
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: facere
                                language:
                                    type: string
                                    description: ''
                                    example: nihil
                                nationality:
                                    type: string
                                    description: ''
                                    example: perspiciatis
                                city_id:
                                    type: string
                                    description: ''
                                    example: officia
                                email:
                                    type: string
                                    description: ''
                                    example: veniam
                                employment_type:
                                    type: string
                                    description: ''
                                    example: neque
                                qualifications:
                                    type: string
                                    description: ''
                                    example: dicta
                            required:
                                - password
            security: []
    /api/nuritionists:
        get:
            summary: 'Display a listing of the Nuritionist.'
            description: 'GET|HEAD /nuritionists'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Nuritionist
            security: []
        post:
            summary: 'Store a newly created Nuritionist in storage.'
            description: 'POST /nuritionists'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Nuritionist
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: quo
                                first_name:
                                    type: string
                                    description: ''
                                    example: quisquam
                                middle_name:
                                    type: string
                                    description: ''
                                    example: quae
                                last_name:
                                    type: string
                                    description: ''
                                    example: molestias
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: sit
                                language:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                nationality:
                                    type: string
                                    description: ''
                                    example: et
                                city_id:
                                    type: string
                                    description: ''
                                    example: et
                                email:
                                    type: string
                                    description: ''
                                    example: dignissimos
                                employment_type:
                                    type: string
                                    description: ''
                                    example: doloribus
                                qualifications:
                                    type: string
                                    description: ''
                                    example: dolorem
                            required:
                                - password
            security: []
    '/api/nuritionists/{nuritionist}':
        get:
            summary: 'Display the specified Nuritionist.'
            description: 'GET|HEAD /nuritionists/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Nuritionist
            security: []
        put:
            summary: 'Update the specified Nuritionist in storage.'
            description: 'PUT/PATCH /nuritionists/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Nuritionist
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: deleniti
                                first_name:
                                    type: string
                                    description: ''
                                    example: consequatur
                                middle_name:
                                    type: string
                                    description: ''
                                    example: mollitia
                                last_name:
                                    type: string
                                    description: ''
                                    example: recusandae
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: totam
                                language:
                                    type: string
                                    description: ''
                                    example: qui
                                nationality:
                                    type: string
                                    description: ''
                                    example: alias
                                city_id:
                                    type: string
                                    description: ''
                                    example: iste
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 16
                                email:
                                    type: string
                                    description: ''
                                    example: sed
                                employment_type:
                                    type: string
                                    description: ''
                                    example: accusantium
                                qualifications:
                                    type: string
                                    description: ''
                                    example: ex
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified Nuritionist from storage.'
            description: 'DELETE /nuritionists/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Nuritionist
            security: []
        parameters:
            -
                in: path
                name: nuritionist
                description: ''
                example: saepe
                required: true
                schema:
                    type: string
    /api/ortopedic_and_surgeons/register:
        post:
            summary: 'Store a newly created OrtopedicAndSurgeon in storage.'
            description: 'POST /ortopedicAndSurgeons'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Ortopedic And Surgeon'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: error
                                first_name:
                                    type: string
                                    description: ''
                                    example: accusamus
                                middle_name:
                                    type: string
                                    description: ''
                                    example: qui
                                last_name:
                                    type: string
                                    description: ''
                                    example: deleniti
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: porro
                                language:
                                    type: string
                                    description: ''
                                    example: autem
                                nationality:
                                    type: string
                                    description: ''
                                    example: sed
                                city_id:
                                    type: string
                                    description: ''
                                    example: ex
                                email:
                                    type: string
                                    description: ''
                                    example: rerum
                                employment_type:
                                    type: string
                                    description: ''
                                    example: praesentium
                                qualifications:
                                    type: string
                                    description: ''
                                    example: aut
                            required:
                                - password
            security: []
    /api/nuritionists/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Ortopedic And Surgeon'
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/nuritionists/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Ortopedic And Surgeon'
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/ortopedic_and_surgeons:
        get:
            summary: 'Display a listing of the OrtopedicAndSurgeon.'
            description: 'GET|HEAD /ortopedicAndSurgeons'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Ortopedic And Surgeon'
            security: []
        post:
            summary: 'Store a newly created OrtopedicAndSurgeon in storage.'
            description: 'POST /ortopedicAndSurgeons'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Ortopedic And Surgeon'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: nemo
                                first_name:
                                    type: string
                                    description: ''
                                    example: id
                                middle_name:
                                    type: string
                                    description: ''
                                    example: recusandae
                                last_name:
                                    type: string
                                    description: ''
                                    example: sapiente
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: eius
                                language:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                nationality:
                                    type: string
                                    description: ''
                                    example: quam
                                city_id:
                                    type: string
                                    description: ''
                                    example: natus
                                email:
                                    type: string
                                    description: ''
                                    example: sapiente
                                employment_type:
                                    type: string
                                    description: ''
                                    example: eos
                                qualifications:
                                    type: string
                                    description: ''
                                    example: fugiat
                            required:
                                - password
            security: []
    '/api/ortopedic_and_surgeons/{ortopedic_and_surgeon}':
        get:
            summary: 'Display the specified OrtopedicAndSurgeon.'
            description: 'GET|HEAD /ortopedicAndSurgeons/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Ortopedic And Surgeon'
            security: []
        put:
            summary: 'Update the specified OrtopedicAndSurgeon in storage.'
            description: 'PUT/PATCH /ortopedicAndSurgeons/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Ortopedic And Surgeon'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: aliquam
                                first_name:
                                    type: string
                                    description: ''
                                    example: voluptate
                                middle_name:
                                    type: string
                                    description: ''
                                    example: alias
                                last_name:
                                    type: string
                                    description: ''
                                    example: aut
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: magnam
                                language:
                                    type: string
                                    description: ''
                                    example: magni
                                nationality:
                                    type: string
                                    description: ''
                                    example: sunt
                                city_id:
                                    type: string
                                    description: ''
                                    example: exercitationem
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 8
                                email:
                                    type: string
                                    description: ''
                                    example: fugit
                                employment_type:
                                    type: string
                                    description: ''
                                    example: praesentium
                                qualifications:
                                    type: string
                                    description: ''
                                    example: eveniet
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified OrtopedicAndSurgeon from storage.'
            description: 'DELETE /ortopedicAndSurgeons/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Ortopedic And Surgeon'
            security: []
        parameters:
            -
                in: path
                name: ortopedic_and_surgeon
                description: ''
                example: repellat
                required: true
                schema:
                    type: string
    /api/performance_coaches/register:
        post:
            summary: 'Store a newly created PerformanceCoach in storage.'
            description: 'POST /performanceCoaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Performance Coach'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: quas
                                middle_name:
                                    type: string
                                    description: ''
                                    example: fuga
                                last_name:
                                    type: string
                                    description: ''
                                    example: ut
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: et
                                language:
                                    type: string
                                    description: ''
                                    example: nemo
                                nationality:
                                    type: string
                                    description: ''
                                    example: quos
                                city_id:
                                    type: string
                                    description: ''
                                    example: itaque
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 14
                                password:
                                    type: string
                                    description: ''
                                    example: est
                                email:
                                    type: string
                                    description: ''
                                    example: aliquid
                                employment_type:
                                    type: string
                                    description: ''
                                    example: consequatur
                                qualifications:
                                    type: string
                                    description: ''
                                    example: est
                            required:
                                - password
                                - email
            security: []
    /api/performance_coaches/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Performance Coach'
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/performance_coaches/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Performance Coach'
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/performance_coaches:
        get:
            summary: 'Display a listing of the PerformanceCoach.'
            description: 'GET|HEAD /performanceCoaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Performance Coach'
            security: []
        post:
            summary: 'Store a newly created PerformanceCoach in storage.'
            description: 'POST /performanceCoaches'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Performance Coach'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: minima
                                middle_name:
                                    type: string
                                    description: ''
                                    example: veniam
                                last_name:
                                    type: string
                                    description: ''
                                    example: ea
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: consequatur
                                language:
                                    type: string
                                    description: ''
                                    example: quis
                                nationality:
                                    type: string
                                    description: ''
                                    example: dolores
                                city_id:
                                    type: string
                                    description: ''
                                    example: est
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 17
                                password:
                                    type: string
                                    description: ''
                                    example: libero
                                email:
                                    type: string
                                    description: ''
                                    example: sit
                                employment_type:
                                    type: string
                                    description: ''
                                    example: fugiat
                                qualifications:
                                    type: string
                                    description: ''
                                    example: necessitatibus
                            required:
                                - password
                                - email
            security: []
    '/api/performance_coaches/{performance_coach}':
        get:
            summary: 'Display the specified PerformanceCoach.'
            description: 'GET|HEAD /performanceCoaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Performance Coach'
            security: []
        put:
            summary: 'Update the specified PerformanceCoach in storage.'
            description: 'PUT/PATCH /performanceCoaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Performance Coach'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: ex
                                first_name:
                                    type: string
                                    description: ''
                                    example: doloribus
                                middle_name:
                                    type: string
                                    description: ''
                                    example: itaque
                                last_name:
                                    type: string
                                    description: ''
                                    example: eum
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: nemo
                                language:
                                    type: string
                                    description: ''
                                    example: et
                                nationality:
                                    type: string
                                    description: ''
                                    example: quo
                                city_id:
                                    type: string
                                    description: ''
                                    example: quis
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                email:
                                    type: string
                                    description: ''
                                    example: voluptate
                                employment_type:
                                    type: string
                                    description: ''
                                    example: illum
                                qualifications:
                                    type: string
                                    description: ''
                                    example: aliquam
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified PerformanceCoach from storage.'
            description: 'DELETE /performanceCoaches/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Performance Coach'
            security: []
        parameters:
            -
                in: path
                name: performance_coach
                description: ''
                example: illo
                required: true
                schema:
                    type: string
    /api/personal_details:
        get:
            summary: 'Display a listing of the PersonalDetails.'
            description: 'GET|HEAD /personalDetails'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Personal Details'
            security: []
        post:
            summary: 'Store a newly created PersonalDetails in storage.'
            description: 'POST /personalDetails'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Personal Details'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 18
                                first_name:
                                    type: string
                                    description: ''
                                    example: saepe
                                marital_status:
                                    type: string
                                    description: ''
                                    example: dolorem
                                mother_maiden_name:
                                    type: string
                                    description: ''
                                    example: voluptates
                                last_name:
                                    type: string
                                    description: ''
                                    example: doloremque
                                height:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                body_weight:
                                    type: string
                                    description: ''
                                    example: maiores
                                phone:
                                    type: string
                                    description: ''
                                    example: possimus
                                sm_handle:
                                    type: string
                                    description: ''
                                    example: molestiae
                                highest_education:
                                    type: string
                                    description: ''
                                    example: dolor
                                place_of_birth:
                                    type: string
                                    description: ''
                                    example: est
                                school:
                                    type: string
                                    description: ''
                                    example: a
                                career_preference:
                                    type: string
                                    description: ''
                                    example: et
                                is_still_schooling:
                                    type: boolean
                                    description: ''
                                    example: false
                                contact_address:
                                    type: string
                                    description: ''
                                    example: inventore
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 8
                                state_of_origin:
                                    type: integer
                                    description: ''
                                    example: 10
                                zipcode:
                                    type: integer
                                    description: ''
                                    example: 9
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
    '/api/personal_details/{personal_detail}':
        get:
            summary: 'Display the specified PersonalDetails.'
            description: 'GET|HEAD /personalDetails/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Personal Details'
            security: []
        put:
            summary: 'Update the specified PersonalDetails in storage.'
            description: 'PUT/PATCH /personalDetails/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Personal Details'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: quis
                                marital_status:
                                    type: string
                                    description: ''
                                    example: libero
                                mother_maiden_name:
                                    type: string
                                    description: ''
                                    example: corrupti
                                last_name:
                                    type: string
                                    description: ''
                                    example: ipsum
                                height:
                                    type: string
                                    description: ''
                                    example: expedita
                                body_weight:
                                    type: string
                                    description: ''
                                    example: autem
                                phone:
                                    type: string
                                    description: ''
                                    example: accusamus
                                sm_handle:
                                    type: string
                                    description: ''
                                    example: excepturi
                                highest_education:
                                    type: string
                                    description: ''
                                    example: cumque
                                place_of_birth:
                                    type: string
                                    description: ''
                                    example: nesciunt
                                school:
                                    type: string
                                    description: ''
                                    example: tempore
                                career_preference:
                                    type: string
                                    description: ''
                                    example: sit
                                is_still_schooling:
                                    type: boolean
                                    description: ''
                                    example: false
                                contact_address:
                                    type: string
                                    description: ''
                                    example: soluta
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                country_id:
                                    type: integer
                                    description: ''
                                    example: 12
                                state_of_origin:
                                    type: integer
                                    description: ''
                                    example: 1
                                zipcode:
                                    type: integer
                                    description: ''
                                    example: 16
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified PersonalDetails from storage.'
            description: 'DELETE /personalDetails/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Personal Details'
            security: []
        parameters:
            -
                in: path
                name: personal_detail
                description: ''
                example: velit
                required: true
                schema:
                    type: string
    /api/physios/register:
        post:
            summary: 'Store a newly created Physio in storage.'
            description: 'POST /physios'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Physio
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: sit
                                first_name:
                                    type: string
                                    description: ''
                                    example: placeat
                                middle_name:
                                    type: string
                                    description: ''
                                    example: est
                                last_name:
                                    type: string
                                    description: ''
                                    example: consequatur
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: delectus
                                language:
                                    type: string
                                    description: ''
                                    example: officiis
                                nationality:
                                    type: string
                                    description: ''
                                    example: optio
                                city_id:
                                    type: string
                                    description: ''
                                    example: facilis
                                email:
                                    type: string
                                    description: ''
                                    example: sint
                                employment_type:
                                    type: string
                                    description: ''
                                    example: incidunt
                                qualifications:
                                    type: string
                                    description: ''
                                    example: illo
                            required:
                                - password
            security: []
    /api/physios/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Physio
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/physios/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Physio
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/physios:
        get:
            summary: 'Display a listing of the Physio.'
            description: 'GET|HEAD /physios'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Physio
            security: []
        post:
            summary: 'Store a newly created Physio in storage.'
            description: 'POST /physios'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Physio
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: est
                                first_name:
                                    type: string
                                    description: ''
                                    example: harum
                                middle_name:
                                    type: string
                                    description: ''
                                    example: voluptatibus
                                last_name:
                                    type: string
                                    description: ''
                                    example: recusandae
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: sunt
                                language:
                                    type: string
                                    description: ''
                                    example: rem
                                nationality:
                                    type: string
                                    description: ''
                                    example: quam
                                city_id:
                                    type: string
                                    description: ''
                                    example: facere
                                email:
                                    type: string
                                    description: ''
                                    example: cum
                                employment_type:
                                    type: string
                                    description: ''
                                    example: explicabo
                                qualifications:
                                    type: string
                                    description: ''
                                    example: in
                            required:
                                - password
            security: []
    '/api/physios/{physio}':
        get:
            summary: 'Display the specified Physio.'
            description: 'GET|HEAD /physios/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Physio
            security: []
        put:
            summary: 'Update the specified Physio in storage.'
            description: 'PUT/PATCH /physios/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Physio
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: corporis
                                first_name:
                                    type: string
                                    description: ''
                                    example: ea
                                middle_name:
                                    type: string
                                    description: ''
                                    example: iste
                                last_name:
                                    type: string
                                    description: ''
                                    example: qui
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: natus
                                language:
                                    type: string
                                    description: ''
                                    example: pariatur
                                nationality:
                                    type: string
                                    description: ''
                                    example: et
                                city_id:
                                    type: string
                                    description: ''
                                    example: et
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                email:
                                    type: string
                                    description: ''
                                    example: commodi
                                employment_type:
                                    type: string
                                    description: ''
                                    example: pariatur
                                qualifications:
                                    type: string
                                    description: ''
                                    example: sed
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified Physio from storage.'
            description: 'DELETE /physios/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Physio
            security: []
        parameters:
            -
                in: path
                name: physio
                description: ''
                example: assumenda
                required: true
                schema:
                    type: string
    /api/psych_predictors:
        get:
            summary: 'Display a listing of the PsychPredictor.'
            description: 'GET|HEAD /psychPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Psych Predictor'
            security: []
        post:
            summary: 'Store a newly created PsychPredictor in storage.'
            description: 'POST /psychPredictors'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Psych Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                time_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 11
                                hours_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 6
                                is_parent_in_support:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_team_player:
                                    type: boolean
                                    description: ''
                                    example: false
                                parent_in_support_reason:
                                    type: string
                                    description: ''
                                    example: consequatur
                                challenges:
                                    type: string
                                    description: ''
                                    example: et
                                greatest_motivation:
                                    type: string
                                    description: ''
                                    example: eligendi
                                strength:
                                    type: string
                                    description: ''
                                    example: non
                                weakness:
                                    type: string
                                    description: ''
                                    example: illum
                                can_overcome_challenges:
                                    type: boolean
                                    description: ''
                                    example: false
                                time_start_sport:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                rating_sports:
                                    type: string
                                    description: ''
                                    example: impedit
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - time_practice_in_week
                                - hours_practice_in_week
            security: []
    '/api/psych_predictors/{psych_predictor}':
        get:
            summary: 'Display the specified PsychPredictor.'
            description: 'GET|HEAD /psychPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Psych Predictor'
            security: []
        put:
            summary: 'Update the specified PsychPredictor in storage.'
            description: 'PUT/PATCH /psychPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Psych Predictor'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                time_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 10
                                hours_practice_in_week:
                                    type: integer
                                    description: ''
                                    example: 11
                                is_parent_in_support:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_team_player:
                                    type: boolean
                                    description: ''
                                    example: false
                                parent_in_support_reason:
                                    type: string
                                    description: ''
                                    example: dolores
                                challenges:
                                    type: string
                                    description: ''
                                    example: quas
                                greatest_motivation:
                                    type: string
                                    description: ''
                                    example: doloremque
                                strength:
                                    type: string
                                    description: ''
                                    example: expedita
                                weakness:
                                    type: string
                                    description: ''
                                    example: vitae
                                can_overcome_challenges:
                                    type: boolean
                                    description: ''
                                    example: false
                                time_start_sport:
                                    type: string
                                    description: ''
                                    example: magnam
                                rating_sports:
                                    type: string
                                    description: ''
                                    example: voluptate
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - time_practice_in_week
                                - hours_practice_in_week
            security: []
        delete:
            summary: 'Remove the specified PsychPredictor from storage.'
            description: 'DELETE /psychPredictors/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Psych Predictor'
            security: []
        parameters:
            -
                in: path
                name: psych_predictor
                description: ''
                example: aliquid
                required: true
                schema:
                    type: string
    /api/scouts/register:
        post:
            summary: 'Store a newly created Scout in storage.'
            description: 'POST /scouts'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Scout
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: omnis
                                middle_name:
                                    type: string
                                    description: ''
                                    example: nobis
                                last_name:
                                    type: string
                                    description: ''
                                    example: dicta
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: aperiam
                                scouting_age:
                                    type: string
                                    description: ''
                                    example: temporibus
                                scouting_gender:
                                    type: string
                                    description: ''
                                    example: aut
                                sports:
                                    type: string
                                    description: ''
                                    example: aut
                                specialization:
                                    type: string
                                    description: ''
                                    example: officiis
                                language:
                                    type: string
                                    description: ''
                                    example: corporis
                                nationality:
                                    type: string
                                    description: ''
                                    example: praesentium
                                city_id:
                                    type: string
                                    description: ''
                                    example: quis
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 18
                                password:
                                    type: string
                                    description: ''
                                    example: cum
                                email:
                                    type: string
                                    description: ''
                                    example: consequatur
                                employment_type:
                                    type: string
                                    description: ''
                                    example: et
                                scouting_level:
                                    type: string
                                    description: ''
                                    example: ea
                                qualifications:
                                    type: string
                                    description: ''
                                    example: nobis
                                team_club:
                                    type: string
                                    description: ''
                                    example: at
                            required:
                                - password
                                - email
            security: []
    /api/scouts/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Scout
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/scouts/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Scout
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/scouts:
        get:
            summary: 'Display a listing of the Scout.'
            description: 'GET|HEAD /scouts'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Scout
            security: []
        post:
            summary: 'Store a newly created Scout in storage.'
            description: 'POST /scouts'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Scout
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: ea
                                middle_name:
                                    type: string
                                    description: ''
                                    example: doloremque
                                last_name:
                                    type: string
                                    description: ''
                                    example: et
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: dignissimos
                                scouting_age:
                                    type: string
                                    description: ''
                                    example: culpa
                                scouting_gender:
                                    type: string
                                    description: ''
                                    example: qui
                                sports:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                specialization:
                                    type: string
                                    description: ''
                                    example: dignissimos
                                language:
                                    type: string
                                    description: ''
                                    example: eaque
                                nationality:
                                    type: string
                                    description: ''
                                    example: accusantium
                                city_id:
                                    type: string
                                    description: ''
                                    example: labore
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 16
                                password:
                                    type: string
                                    description: ''
                                    example: nisi
                                email:
                                    type: string
                                    description: ''
                                    example: ducimus
                                employment_type:
                                    type: string
                                    description: ''
                                    example: nam
                                scouting_level:
                                    type: string
                                    description: ''
                                    example: tempore
                                qualifications:
                                    type: string
                                    description: ''
                                    example: molestias
                                team_club:
                                    type: string
                                    description: ''
                                    example: commodi
                            required:
                                - password
                                - email
            security: []
    '/api/scouts/{scout}':
        get:
            summary: 'Display the specified Scout.'
            description: 'GET|HEAD /scouts/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Scout
            security: []
        put:
            summary: 'Update the specified Scout in storage.'
            description: 'PUT/PATCH /scouts/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Scout
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: officiis
                                first_name:
                                    type: string
                                    description: ''
                                    example: atque
                                middle_name:
                                    type: string
                                    description: ''
                                    example: sunt
                                last_name:
                                    type: string
                                    description: ''
                                    example: quidem
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                gender:
                                    type: string
                                    description: ''
                                    example: ipsum
                                scouting_age:
                                    type: string
                                    description: ''
                                    example: consectetur
                                scouting_gender:
                                    type: string
                                    description: ''
                                    example: quia
                                sports:
                                    type: string
                                    description: ''
                                    example: voluptas
                                specialization:
                                    type: string
                                    description: ''
                                    example: facilis
                                language:
                                    type: string
                                    description: ''
                                    example: harum
                                nationality:
                                    type: string
                                    description: ''
                                    example: et
                                city_id:
                                    type: string
                                    description: ''
                                    example: accusamus
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 1
                                email:
                                    type: string
                                    description: ''
                                    example: aspernatur
                                employment_type:
                                    type: string
                                    description: ''
                                    example: eveniet
                                scouting_level:
                                    type: string
                                    description: ''
                                    example: aut
                                qualifications:
                                    type: string
                                    description: ''
                                    example: assumenda
                                team_club:
                                    type: string
                                    description: ''
                                    example: ipsam
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified Scout from storage.'
            description: 'DELETE /scouts/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Scout
            security: []
        parameters:
            -
                in: path
                name: scout
                description: ''
                example: voluptas
                required: true
                schema:
                    type: string
    /api/skill_reports:
        get:
            summary: 'Display a listing of the SkillReport.'
            description: 'GET|HEAD /skillReports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Report'
            security: []
        post:
            summary: 'Store a newly created SkillReport in storage.'
            description: 'POST /skillReports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Report'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                speed:
                                    type: string
                                    description: ''
                                    example: dolor
                                passing:
                                    type: string
                                    description: ''
                                    example: ullam
                                shooting:
                                    type: string
                                    description: ''
                                    example: occaecati
                                dribbling:
                                    type: string
                                    description: ''
                                    example: magni
                                heading:
                                    type: string
                                    description: ''
                                    example: omnis
                                ball_control:
                                    type: string
                                    description: ''
                                    example: eum
                                fitness:
                                    type: string
                                    description: ''
                                    example: adipisci
                                movement:
                                    type: string
                                    description: ''
                                    example: vel
                                awareness:
                                    type: string
                                    description: ''
                                    example: necessitatibus
                                decisions:
                                    type: string
                                    description: ''
                                    example: quo
                                workrate:
                                    type: string
                                    description: ''
                                    example: blanditiis
                                strength:
                                    type: string
                                    description: ''
                                    example: porro
                                crossing:
                                    type: string
                                    description: ''
                                    example: et
                                finishing:
                                    type: string
                                    description: ''
                                    example: architecto
                                positioning:
                                    type: string
                                    description: ''
                                    example: cum
                                anticipation:
                                    type: string
                                    description: ''
                                    example: ea
                                total:
                                    type: string
                                    description: ''
                                    example: corporis
                                overall_grade:
                                    type: string
                                    description: ''
                                    example: ratione
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
    '/api/skill_reports/{skill_report}':
        get:
            summary: 'Display the specified SkillReport.'
            description: 'GET|HEAD /skillReports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Report'
            security: []
        put:
            summary: 'Update the specified SkillReport in storage.'
            description: 'PUT/PATCH /skillReports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Report'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 10
                                speed:
                                    type: string
                                    description: ''
                                    example: recusandae
                                passing:
                                    type: string
                                    description: ''
                                    example: et
                                shooting:
                                    type: string
                                    description: ''
                                    example: id
                                dribbling:
                                    type: string
                                    description: ''
                                    example: minus
                                heading:
                                    type: string
                                    description: ''
                                    example: sint
                                ball_control:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                fitness:
                                    type: string
                                    description: ''
                                    example: consequatur
                                movement:
                                    type: string
                                    description: ''
                                    example: minima
                                awareness:
                                    type: string
                                    description: ''
                                    example: distinctio
                                decisions:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                                workrate:
                                    type: string
                                    description: ''
                                    example: aut
                                strength:
                                    type: string
                                    description: ''
                                    example: beatae
                                crossing:
                                    type: string
                                    description: ''
                                    example: commodi
                                finishing:
                                    type: string
                                    description: ''
                                    example: numquam
                                positioning:
                                    type: string
                                    description: ''
                                    example: a
                                anticipation:
                                    type: string
                                    description: ''
                                    example: ad
                                total:
                                    type: string
                                    description: ''
                                    example: autem
                                overall_grade:
                                    type: string
                                    description: ''
                                    example: assumenda
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified SkillReport from storage.'
            description: 'DELETE /skillReports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Report'
            security: []
        parameters:
            -
                in: path
                name: skill_report
                description: ''
                example: et
                required: true
                schema:
                    type: string
    /api/skill_tests:
        get:
            summary: 'Display a listing of the SkillTest.'
            description: 'GET|HEAD /skillTests'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Test'
            security: []
        post:
            summary: 'Store a newly created SkillTest in storage.'
            description: 'POST /skillTests'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Test'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: molestiae
                                sport_id:
                                    type: integer
                                    description: ''
                                    example: 10
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - sport_id
            security: []
    '/api/skill_tests/{skill_test}':
        get:
            summary: 'Display the specified SkillTest.'
            description: 'GET|HEAD /skillTests/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Skill Test'
            security: []
        put:
            summary: 'Update the specified SkillTest in storage.'
            description: 'PUT/PATCH /skillTests/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Test'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: eaque
                                sport_id:
                                    type: integer
                                    description: ''
                                    example: 2
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - sport_id
            security: []
        delete:
            summary: 'Remove the specified SkillTest from storage.'
            description: 'DELETE /skillTests/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Skill Test'
            security: []
        parameters:
            -
                in: path
                name: skill_test
                description: ''
                example: officia
                required: true
                schema:
                    type: string
    /api/sports:
        get:
            summary: 'Display a listing of the Sport.'
            description: 'GET|HEAD /sports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Sport
            security: []
        post:
            summary: 'Store a newly created Sport in storage.'
            description: 'POST /sports'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Sport
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: molestiae
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
    '/api/sports/{sport}':
        get:
            summary: 'Display the specified Sport.'
            description: 'GET|HEAD /sports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Sport
            security: []
        put:
            summary: 'Update the specified Sport in storage.'
            description: 'PUT/PATCH /sports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Sport
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: fugiat
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified Sport from storage.'
            description: 'DELETE /sports/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Sport
            security: []
        parameters:
            -
                in: path
                name: sport
                description: ''
                example: aut
                required: true
                schema:
                    type: string
    '/api/states/byCountry/{id}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: false
                                    message: 'State not found'
                                properties:
                                    success: { type: boolean, example: false }
                                    message: { type: string, example: 'State not found' }
            tags:
                - State
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: ad
                required: true
                schema:
                    type: string
    /api/talent/register:
        post:
            summary: 'Store a newly created Talent in storage.'
            description: 'POST /talent'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Talent
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                scheme:
                                    type: string
                                    description: ''
                                    example: ullam
                                password:
                                    type: string
                                    description: ''
                                    example: excepturi
                                email:
                                    type: string
                                    description: ''
                                    example: perspiciatis
                                first_name:
                                    type: string
                                    description: ''
                                    example: aut
                                middle_name:
                                    type: string
                                    description: ''
                                    example: ut
                                last_name:
                                    type: string
                                    description: ''
                                    example: incidunt
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                age:
                                    type: integer
                                    description: ''
                                    example: 10
                                gender:
                                    type: string
                                    description: ''
                                    example: minus
                                languages:
                                    type: string
                                    description: ''
                                    example: dicta
                                city_id:
                                    type: string
                                    description: ''
                                    example: at
                                genotype:
                                    type: string
                                    description: ''
                                    example: at
                                blood_group:
                                    type: string
                                    description: ''
                                    example: delectus
                                sports:
                                    type: string
                                    description: ''
                                    example: vel
                                positions:
                                    type: string
                                    description: ''
                                    example: error
                                educational_background:
                                    type: string
                                    description: ''
                                    example: repellat
                                nationality:
                                    type: string
                                    description: ''
                                    example: nostrum
                                height:
                                    type: number
                                    description: ''
                                    example: 23063151.5444
                                weight:
                                    type: number
                                    description: ''
                                    example: 850.6
                            required:
                                - password
                                - email
                                - first_name
                                - last_name
            security: []
    /api/talent/uploadProfile:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Talent
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: 'The value must be a file.'
            security: []
    /api/talent/uploadDocs:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Talent
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                pictures:
                                    type: array
                                    description: 'The value must be a file.'
                                    example: [null, null]
                                    items: { type: file }
            security: []
    /api/talent:
        get:
            summary: 'Display a listing of the Talent.'
            description: 'GET|HEAD /talent'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Talent
            security: []
        post:
            summary: 'Store a newly created Talent in storage.'
            description: 'POST /talent'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Talent
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                scheme:
                                    type: string
                                    description: ''
                                    example: et
                                password:
                                    type: string
                                    description: ''
                                    example: ut
                                email:
                                    type: string
                                    description: ''
                                    example: iusto
                                first_name:
                                    type: string
                                    description: ''
                                    example: a
                                middle_name:
                                    type: string
                                    description: ''
                                    example: aspernatur
                                last_name:
                                    type: string
                                    description: ''
                                    example: consequuntur
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                age:
                                    type: integer
                                    description: ''
                                    example: 5
                                gender:
                                    type: string
                                    description: ''
                                    example: quas
                                languages:
                                    type: string
                                    description: ''
                                    example: est
                                city_id:
                                    type: string
                                    description: ''
                                    example: similique
                                genotype:
                                    type: string
                                    description: ''
                                    example: iste
                                blood_group:
                                    type: string
                                    description: ''
                                    example: architecto
                                sports:
                                    type: string
                                    description: ''
                                    example: laborum
                                positions:
                                    type: string
                                    description: ''
                                    example: doloremque
                                educational_background:
                                    type: string
                                    description: ''
                                    example: qui
                                nationality:
                                    type: string
                                    description: ''
                                    example: aliquid
                                height:
                                    type: number
                                    description: ''
                                    example: 31382.834
                                weight:
                                    type: number
                                    description: ''
                                    example: 39675451.845163
                            required:
                                - password
                                - email
                                - first_name
                                - last_name
            security: []
    '/api/talent/{talent}':
        get:
            summary: 'Display the specified Talent.'
            description: 'GET|HEAD /talent/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Talent
            security: []
        put:
            summary: 'Update the specified Talent in storage.'
            description: 'PUT/PATCH /talent/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Talent
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                profile_url:
                                    type: string
                                    description: ''
                                    example: fugit
                                qualifications:
                                    type: string
                                    description: ''
                                    example: ratione
                                scheme:
                                    type: string
                                    description: ''
                                    example: eveniet
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 5
                                email:
                                    type: string
                                    description: ''
                                    example: et
                                first_name:
                                    type: string
                                    description: ''
                                    example: ullam
                                middle_name:
                                    type: string
                                    description: ''
                                    example: ut
                                last_name:
                                    type: string
                                    description: ''
                                    example: aut
                                dob:
                                    type: string
                                    description: ''
                                    example: {  }
                                age:
                                    type: integer
                                    description: ''
                                    example: 15
                                gender:
                                    type: string
                                    description: ''
                                    example: accusamus
                                languages:
                                    type: string
                                    description: ''
                                    example: explicabo
                                city_id:
                                    type: string
                                    description: ''
                                    example: laborum
                                genotype:
                                    type: string
                                    description: ''
                                    example: quis
                                blood_group:
                                    type: string
                                    description: ''
                                    example: deleniti
                                sports:
                                    type: string
                                    description: ''
                                    example: iure
                                positions:
                                    type: string
                                    description: ''
                                    example: eaque
                                educational_background:
                                    type: string
                                    description: ''
                                    example: et
                                nationality:
                                    type: string
                                    description: ''
                                    example: consequatur
                                height:
                                    type: number
                                    description: ''
                                    example: 98.949784049
                                weight:
                                    type: number
                                    description: ''
                                    example: 115779852.278
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
            security: []
        delete:
            summary: 'Remove the specified Talent from storage.'
            description: 'DELETE /talent/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Talent
            security: []
        parameters:
            -
                in: path
                name: talent
                description: ''
                example: maxime
                required: true
                schema:
                    type: string
    /api/videos:
        get:
            summary: 'Display a listing of the Video.'
            description: 'GET|HEAD /videos'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Video
            security: []
        post:
            summary: 'Store a newly created Video in storage.'
            description: 'POST /videos'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Video
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type_id:
                                    type: integer
                                    description: ''
                                    example: 16
                                skill_test_id:
                                    type: integer
                                    description: ''
                                    example: 6
                                url:
                                    type: string
                                    description: ''
                                    example: quos
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - type_id
                                - skill_test_id
                                - url
            security: []
    '/api/videos/{video}':
        get:
            summary: 'Display the specified Video.'
            description: 'GET|HEAD /videos/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Video
            security: []
        put:
            summary: 'Update the specified Video in storage.'
            description: 'PUT/PATCH /videos/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Video
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type_id:
                                    type: integer
                                    description: ''
                                    example: 6
                                skill_test_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                url:
                                    type: string
                                    description: ''
                                    example: qui
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - type_id
                                - skill_test_id
                                - url
            security: []
        delete:
            summary: 'Remove the specified Video from storage.'
            description: 'DELETE /videos/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Video
            security: []
        parameters:
            -
                in: path
                name: video
                description: ''
                example: magnam
                required: true
                schema:
                    type: string
    /api/video_types:
        get:
            summary: 'Display a listing of the VideoType.'
            description: 'GET|HEAD /videoTypes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Video Type'
            security: []
        post:
            summary: 'Store a newly created VideoType in storage.'
            description: 'POST /videoTypes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Video Type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: consequuntur
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
    '/api/video_types/{video_type}':
        get:
            summary: 'Display the specified VideoType.'
            description: 'GET|HEAD /videoTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Video Type'
            security: []
        put:
            summary: 'Update the specified VideoType in storage.'
            description: 'PUT/PATCH /videoTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Video Type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: qui
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified VideoType from storage.'
            description: 'DELETE /videoTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Video Type'
            security: []
        parameters:
            -
                in: path
                name: video_type
                description: ''
                example: dignissimos
                required: true
                schema:
                    type: string
components:
    securitySchemes:
        default: []
security:
    -
        default: []
